{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Onco_plots\"\nauthor: \"Taylor\"\ndate: \"10/4/2017\"\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\ninstall.packages(\"cBioPortal\", dependencies = TRUE, repos = 'http://cran.rstudio.com')\nsource(\"https://bioconductor.org/biocLite.R\")\nbiocLite(\"ComplexHeatmap\")\nlibrary(ComplexHeatmap)\n```\n\n## R Markdown\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n```{r, Making Subjective ethnicity tables}\n###               Creating the values for which patients ar which ethnicity \nsnvh_table <- readRDS(\"/Volumes/home/greally-lab/T_Trial/Tables/snvh_table.Rds\")\nsnvh_table_f <- readRDS(\"/Volumes/home/greally-lab/T_Trial/Tables/snvh_table_full.Rds\")\nsnvm_table_f <- readRDS(\"/Volumes/home/greally-lab//T_Trial/Tables/snvm_table_full.Rds\")\nsnvl_table_f <- readRDS(\"/Volumes/home/greally-lab//T_Trial/Tables/snvl_table_full.Rds\")\nINDELLow_table_f <- readRDS(\"/Volumes/home/greally-lab//T_Trial/Tables/IDL_table_full.Rds\")\nINDELHIGH_table_f <- readRDS(\"/Volumes/home/greally-lab//T_Trial/Tables/IDH_table_full.Rds\")\nINDELMOD_table_f <- readRDS(\"/Volumes/home/greally-lab//T_Trial/Tables/IDM_table_full.Rds\")\n# Altered tables with shorter names\nSNVH_fn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVHIGH_fn.Rds\")\nSNVL_fn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVLOW_fn.Rds\")\nSNVM_fn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVMOD_fn.Rds\")\nINDELHIGH_tfn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_fn.Rds\")\nINDELLow_tfn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/INDELLOW_fn.Rds\")\nINDELMOD_tfn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/INDELMOD_fn.Rds\")\n# Obtain Meta data (self-reported)\nMeta_data_COAD <- read.csv(\"/Volumes/home/greally-lab/Taylor_Yu/COAD_clinical_info.csv\")\nMeta_data_READ <- read.csv(\"/Volumes/home/greally-lab/Taylor_Yu/READ_clinical_info.csv\")\nMETA_data<- rbind(Meta_data_COAD,Meta_data_READ)\ndim(META_data)\n\n\nwrite.table(META_data,\"/Volumes/home/greally-lab/T_Trial/TCGA_data_CRC/CRC_clinical.txt\", sep = \"\\t\")\nsum(nrow(Meta_data_COAD),nrow(Meta_data_READ))\nsum(META_data$race_list == \"ASIAN\")\nPT <- as.data.frame(matrix(nrow = 0,ncol = 76))\ncolnames(PT)<- colnames(Meta_data_COAD)\n  AFR_PT <- PT\n  ASIAN_PT <- PT\n  HIS_PT <-PT \n  CEU_PT <- PT\n  Other_PT <- PT\ndim(META_data)\n#629 76\nlevels(META_data$ethnicity) # \"\"                       \"HISPANIC OR LATINO\"     \"NOT HISPANIC OR LATINO\"\nView(META_data[1,])\nfor(x in 1:nrow(META_data)){\n  y <- META_data[x,]\n  if(y$ethnicity == \"HISPANIC OR LATINO\"){\n   HIS_PT <- rbind(HIS_PT,y) \n  }\n  else{\n  if(y$race_list == \"WHITE\"){\n    CEU_PT <- rbind(CEU_PT,y)\n    #View(WHITE_PT)\n  }\n  if(y$race_list ==\"BLACK OR AFRICAN AMERICAN\"){\n    AFR_PT <- rbind(AFR_PT,y)\n  }\n  if(y$race_list == \"ASIAN\"){\n    ASIAN_PT <- rbind(ASIAN_PT,y)\n  }\n   if(y$race_list == \"AMERICAN INDIAN OR ALASKA NATIVE\"){\n    ASIAN_PT <- rbind(ASIAN_PT,y)\n  }\n  if(y$race_list ==\"\"){\n    Other_PT <- rbind(Other_PT,y)\n  }\n  }\n}\n\nhead(HIS_PT,10)# 10 pts There are definitely 10 distinct patients\nsum(META_data$ethnicity ==\"HISPANIC OR LATINO\")# sum = 5 not sure why\nsum(nrow(AFR_PT),nrow(ASIAN_PT),nrow(Other_PT),nrow(CEU_PT))\n#629 patients = smae as the number of rows in META data\nsum(nrow(META_data))\nsum(nrow(Other_PT))\nsum(META_data$race_list ==\"\")\n#missing 1 patient\n#CEU = 296 pts\n#AFR = 65 pts\n#ASAIN = 12 pts + 1 Native American\n#No_race = 255 pts\nwrite.csv(CEU_PT, file = \"/Volumes/home/greally-lab/T_Trial/TCGA_data_CRC/White_meta_CRC.csv\")\ndim(CEU_PT) \n#296 76\nsum(META_data$race_list ==\"BLACK OR AFRICAN AMERICAN\")\nwrite.csv(AFR_PT, file = \"/Volumes/home/greally-lab/T_Trial/TCGA_data_CRC/Black_meta_CRC.csv\")\ndim(AFR_PT)\n#65 76\nsum(META_data$race_list ==\"\")\nwrite.csv(Other_PT, file = \"/Volumes/home/greally-lab/T_Trial/TCGA_data_CRC/Other_meta_CRC.csv\")\ndim(Other_PT)\n#255 76\nwrite.csv(ASIAN_PT, file = \"/Volumes/home/greally-lab/T_Trial/TCGA_data_CRC/Asian_meta_CRC.csv\")\ndim(ASIAN_PT)\n#13 76\n```\nCan use the same meta data tables for each Filter set\n\n```{r, SNVH long version}\n### Making the subjective seperations for the table\n#Seperating out the patients based on ethnicity\n#need to group the ethnicities for the permutation so first make individual matricies of the ethnicities then cbind them together like data = cbind(data_AFR,data_CEU,data_AMR,data_AS) \n x <- 16\n options(stringsAsFactors = FALSE)\n SNVH_fn_AFR <-as.data.frame(SNVH_fn[1])\n SNVH_fn_CEU <- as.data.frame(SNVH_fn[1])\n SNVH_fn_Other <- as.data.frame(SNVH_fn[1])\n SNVH_fn_ASIAN <- as.data.frame(SNVH_fn[1])\nfor(x in 2:ncol(SNVH_fn)){\n  if(match(paste0(\"TCGA-\",colnames(SNVH_fn)[x]),AFR_PT$bcr_patient_barcode, nomatch = 0) > 0){\n    tempcol <- as.data.frame(SNVH_fn[,x])\n    cname<- colnames(SNVH_fn)[x]\n    colnames(tempcol) <- cname\n    SNVH_fn_AFR <- cbind(SNVH_fn_AFR,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_fn)[x]),CEU_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVH_fn[,x])\n    cname <- colnames(SNVH_fn)[x]\n    colnames(tempcol) <- cname\n    SNVH_fn_CEU <- cbind(SNVH_fn_CEU,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_fn)[x]),Other_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVH_fn[,x])\n    cname<- colnames(SNVH_fn)[x]\n    colnames(tempcol) <- cname\n    SNVH_fn_Other <- cbind(SNVH_fn_Other,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_fn)[x]),ASIAN_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVH_fn[,x])\n    cname <- colnames(SNVH_fn)[x]\n    colnames(tempcol) <- cname\n    SNVH_fn_ASIAN <- cbind(SNVH_fn_ASIAN,tempcol)\n  }\n} \nSNVH_fn[,1]\ndim(SNVH_fn_AFR)\ndim(AFR_PT)\n#39625 71(there are 65 patients of AFR ancestry 5 of them should be duplicated) \n#A-6 -6650 (5)\ndim(SNVH_fn_CEU)\n#39625 330\ndim(CEU_PT)\n#296 pts 33 duplicated\n#cbind races\ndim(SNVH_fn_ASIAN)\n#13 pts perfect\ndim(ASIAN_PT)\n#13 pts\ndim(SNVH_fn_Other)\n#242 pts\ndim(Other_PT)\n#242 should be 255 pts? not sure whats up\nsum(ncol(SNVH_fn_ASIAN),ncol(SNVH_fn_AFR),ncol(SNVH_fn_CEU),ncol(SNVH_fn_Other))\n#658 patients! 3? are missing. Will review in a minute\ndim(CEU_PT)\n\n############FINDING MISSING VALUES################################\nSNVH_data <- cbind(SNVH_fn_AFR,SNVH_fn_CEU[,2:330],SNVH_fn_ASIAN[2:14],SNVH_fn_Other[,2:243])\nsum(is.na(match(colnames(SNVH_fn_AFR)[2:ncol(SNVH_fn_AFR)],colnames(SNVH_fn))))\nsum(is.na(match(colnames(SNVH_fn_CEU)[2:ncol(SNVH_fn_CEU)],colnames(SNVH_fn))))\nsum(is.na(match(colnames(SNVH_fn_ASIAN)[2:ncol(SNVH_fn_ASIAN)],colnames(SNVH_fn))))\nsum(is.na(match(colnames(SNVH_fn_Other)[2:ncol(SNVH_fn_Other)],colnames(SNVH_fn))))\ndim(SNVH_data)\nrow.names(SNVH_data) <- SNVH_data$GENES\nSNVH_data <-SNVH_data[-1]\n##Checking placement of each subtable\ncolnames(SNVH_fn_AFR)[2] ==colnames(SNVH_data)[72]\ncolnames(SNVH_fn_CEU)[330] == colnames(SNVH_data)[400]\ncolnames(SNVH_data)[413] == colnames(SNVH_fn_ASIAN)[14]\ncolnames(SNVH_fn_Other)[243]\ncolnames(SNVH_data)[655]\nncol(SNVH_data)\n### Name_table is int he renaming .R file may need to move it\nMissing <- as.matrix(!match(1:658,sort(match(name_table_3[,2], colnames(SNVH_data)))))\noptions(stringsAsFactors = F)\n#####################################Permuation########################\n\nAFR_mean = NULL\nCEU_mean = NULL\nOTHER_mean = NULL\nASIAN_mean = NULL\nset.seed(1)\nfor (i in 1:1000){\n    if(i%%100==0) print(i)\n    tmp_data = t(apply(SNVH_data,1,sample))\n    # here instead of collect the permuated data everytime,\n    # we will only collect statistical values to save memory\n    # we will collect median/mean of number of SNVs in that gene\n    # in each population (or other values you are interested in) \n    \n    sub_AFR_mean = apply(tmp_data[1:5,1:70],1,mean)\n    sub_CEU_mean = apply(tmp_data[,71:399],1,mean)\n    sub_ASIAN_mean = apply(tmp_data[,400:412],1,mean)\n    sub_OTHER_mean = apply(tmp_data[,413:654],1,mean)\n    ###Testing to see some sample sums\n    #sum(sub_ASIAN_mean) 23 .02066\n    #sum(sub_ASIAN_mean) = 25\n    #sum(sub_CEU_mean) = 23.21429\n    \n    AFR_mean = cbind(AFR_mean, sub_AFR_mean)\n    CEU_mean = cbind(CEU_mean, sub_CEU_mean)\n    ASIAN_mean = cbind(ASIAN_mean,sub_ASIAN_mean)\n    OTHER_mean = cbind(OTHER_mean, sub_OTHER_mean)\n    \n}\n\n\n## the result say CEU_mean\n## each column is the statistics from one permutation, each row is the sampled distribution of randomness\n# Commented out the row names becase we care about the gene names\ncolnames(AFR_mean) = paste0(\"permute\",seq(1:1000))\nAFR_mean[1:10,1:10]\n#rownames(CEU_mean) = paste0(\"gene\",seq(1:1000))\ncolnames(CEU_mean) = paste0(\"permute\",seq(1:1000))\nCEU_mean[1:10,1:10]\n#rownames(CEU_mean) = paste0(\"gene\",seq(1:5000))\ncolnames(ASIAN_mean) = paste0(\"permute\",seq(1:1000))\n#rownames(AMR_mean) = paste0(\"gene\",seq(1:5000))\ncolnames(OTHER_mean) = paste0(\"permute\",seq(1:1000))\n#rownames(AS_mean) = paste0(\"gene\",seq(1:5000))\n\n\n### next we gonna compute the observation statistics we have\nob_AFR_mean = apply(SNVH_data[,1:70],1,mean)\nob_CEU_mean = apply(SNVH_data[,71:399],1,mean)\nob_ASIAN_mean = apply(SNVH_data[,400:412],1,mean)\nob_OTHER_mean = apply(SNVH_data[,412:654],1,mean)\n\n### so we can compute the p value now\np_AFR_enrichment = sapply(1:39625,function(x)sum(ob_AFR_mean[x]<AFR_mean[x,])/500)\np_CEU_enrichment = sapply(1:39625,function(x)sum(ob_CEU_mean[x]<CEU_mean[x,])/500)\np_ASIAN_enrichment = sapply(1:39625,function(x)sum(ob_ASIAN_mean[x]<ASIAN_mean[x,])/500)\np_OTHER_enrichment = sapply(1:39625,function(x)sum(ob_OTHER_mean[x]<OTHER_mean[x,])/500)\n\np_CEU_enrichment[1:20]\n# we will see if where the enrichment are, you can set your sinificant level, \n# here I will use 1 out of 500\nSNVH_AFR_enrich <- which(p_AFR_enrichment<1/500)\nSNVH_CEU_enrich <-which(p_CEU_enrichment<1/500)\nSNVH_ASIAN_enrich <-which(p_ASIAN_enrichment<1/500)\nwhich(p_OTHER_enrichment<1/500)\n\n# let's take a look at the index I set to be enriched in CEU again\nenrich_idx\nwhich(p_AFR_enrichment<1/500)\n```\nStarted out with the filters having all genes instead of just genes that were of interest for that filter. That was 39625 genes. This is more than we want to visualize so we are scaling back down to only the genes of interest for each filter. This may be a problem when we combine tables for various filter settings. \n\nThe main reason i went up to all the genes to make sure that all the tables had the same rows and colmuns making them easier to compare using the complex heat maps oncoprint function.\n```{r, SNVH short version}\n###      Choosing only the significant genes## \nHIGH_SIG=apply(SNVH_data,1,function(x)sum(x>0))\nSNVH_SIG = which(HIGH_SIG>10)\nSig_vector <- as.vector(SNVH_SIG)\nSNVH_sig_table <- apply(SNVH_data,1,function(x)sum)\n#relized that I already have tables that are only the genes of insterest fo each filter set\n#################################Re-run with small talbes#####################################\n##################################Race Stratification####################\nSNVH_n<-readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVHIGH_n.Rds\")\nSNVH_n[1:5,1:5]\noptions(stringsAsFactors = FALSE)\nclass(SNVH_n[,5])\n\nSNVH_n_AFR <-as.data.frame(SNVH_n[1])\nSNVH_n_CEU <- as.data.frame(SNVH_n[1])\nSNVH_n_Other <- as.data.frame(SNVH_n[1])\nSNVH_n_ASIAN <- as.data.frame(SNVH_n[1])\n\nx<-16\n\nfor(x in 2:ncol(SNVH_n)){\n  if(match(paste0(\"TCGA-\",colnames(SNVH_n)[x]),AFR_PT$bcr_patient_barcode, nomatch = 0) > 0){\n    tempcol <- as.data.frame(SNVH_n[,x],stingsAsFactors = FALSE)\n    cname<- colnames(SNVH_n)[x]\n    colnames(tempcol) <- cname\n    SNVH_n_AFR <- cbind(SNVH_n_AFR,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_n)[x]),CEU_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVH_n[,x])\n    cname <- colnames(SNVH_n)[x]\n    colnames(tempcol) <- cname\n    SNVH_n_CEU <- cbind(SNVH_n_CEU,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_n)[x]),Other_PT$bcr_patient_barcode,nomatch = 0) >0){\n    tempcol <- as.data.frame(SNVH_n[,x])\n    cname<- colnames(SNVH_n)[x]\n    colnames(tempcol) <- cname\n    SNVH_n_Other <- cbind(SNVH_n_Other,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_n)[x]),ASIAN_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVH_n[,x])\n    cname <- colnames(SNVH_n)[x]\n    colnames(tempcol) <- cname\n    SNVH_n_ASIAN <- cbind(SNVH_n_ASIAN,tempcol)\n  }\n} \n\n\nsum(ncol(SNVH_n_AFR),ncol(SNVH_n_CEU),ncol(SNVH_n_ASIAN),ncol(SNVH_n_Other))\n#658 columns = correct number \n##################Merge races in order######################################\nSNVH_data_short <- cbind(SNVH_n_AFR,SNVH_n_CEU[,2:330],SNVH_n_ASIAN[2:14],SNVH_n_Other[,2:243])\nrownames(SNVH_data_short) <- SNVH_data_short$GENES\n#SNVH_data_short[1:5,1:5]\nSNVH_data_short <-SNVH_data_short[-1]\nwrite.table(SNVH_data_short,\"/Volumes/home/greally-lab/T_Trial/SVNH_Named_ordered.txt\",sep = \"\\t\")\ndim(SNVH_data_short)\n#6645 655 - missing 3 samples. Still not sure what happened = SNVH_n(16,359,624)\n#SNVH_n[,15] should be in Other\n\nsaveRDS(SNVH_data_short, file =\"/Volumes/home/greally-lab/T_Trial/SVNH_Named_ordered.Rds\")\n\n#Missing_columns <- which(is.na(match(colnames(SNVH_n)[-1],substr(colnames(SNVH_data_short)[-1],1,7))))\n#match(paste0(\"TCGA-\",colnames(SNVH_n)[624]),META_data$bcr_patient_barcode)\n#Missing Meta data for theses 3 patients! So its all good. We will contindue without them since there is no self identification\n#match(colnames(SNVH_data_short)[-1],colnames(SNVH_n)[-1])\n#pmatch(colnames(SNVH_n)[16],colnames(SNVH_data_short),duplicates.ok = TRUE)\n#colnames(SNVH_data_short)[417]\n#SNVH_n[1:5,1:20]\n#################################################Permuation############################################################\n\nAFR_mean_short = NULL\nCEU_mean_short = NULL\nOTHER_mean_short = NULL\nASIAN_mean_short = NULL\n\n\n#read in the data each time\nSNVH_data_short <- read.table(\"/Volumes/home/greally-lab/T_Trial/SVNH_Named_ordered.txt\")\ndim(SNVH_data_short)\nSNVH_data_short[1:5,1:5]\n#row.names(SNVH_data_short) <- SNVH_data_short$GENES\n#SNVH_data_short <-SNVH_data_short[-1]\n\nclass(SNVH_data_short[,1])\nsum(SNVH_data_short[,2])\n#apply(SNVH_data_short,2,as.numeric(SNVH_data_short))\n#SNVH_data_short[,2] <- as.numeric(levels(SNVH_data_short[,2]))[SNVH_data_short[,2]]\n\noptions(stringsAsFactors = F)\nset.seed(1)\nfor (i in 1:1000){\n    if(i%%100==0) print(i)\n  #remember to skip the first column it is genes\n    tmp_data = t(apply(SNVH_data_short,1,sample))\n    #class(tmp_data[1,1])\n    #as.numeric(tmp_data[1,1])\n    # here instead of collect the permuated data everytime,\n    # we will only collect statistical values to save memory\n    # we will collect median/mean of number of SNVs in that gene\n    # in each population (or other values you are interested in) \n\n    sub_AFR_mean_short = apply(tmp_data[,1:70],1,mean)\n    sub_CEU_mean_short = apply(tmp_data[,71:399],1,mean)\n    sub_ASIAN_mean_short = apply(tmp_data[,400:412],1,mean)\n    sub_OTHER_mean_short = apply(tmp_data[,413:654],1,mean)\n    ###Testing to see some sample sums\n    #sum(sub_ASIAN_mean) 23 .02066\n    #sum(sub_ASIAN_mean) = 25\n    #sum(sub_CEU_mean) = 23.21429\n    \n    AFR_mean_short = cbind(AFR_mean_short, sub_AFR_mean_short)\n    CEU_mean_short = cbind(CEU_mean_short, sub_CEU_mean_short)\n    ASIAN_mean_short = cbind(ASIAN_mean_short,sub_ASIAN_mean_short)\n    OTHER_mean_short = cbind(OTHER_mean_short, sub_OTHER_mean_short)\n}\n\n\n## the result say AFR_mean\n## each column is the statistics from one permutation, each row is the sampled distribution of randomness\n# Commented out the row names becase we care about the gene names\ncolnames(AFR_mean_short) = paste0(\"permute\",seq(1:1000))\nAFR_mean_short[1:10,1:10]\nrownames(AFR_mean_short) = row.names(SNVH_data_short)\ncolnames(CEU_mean_short) = paste0(\"permute\",seq(1:1000))\nCEU_mean[1:10,1:10]\nrownames(CEU_mean_short) = row.names(SNVH_data_short)\ncolnames(ASIAN_mean_short) = paste0(\"permute\",seq(1:1000))\nrownames(ASIAN_mean_short) = row.names(SNVH_data_short)\ncolnames(OTHER_mean_short) = paste0(\"permute\",seq(1:1000))\nrownames(OTHER_mean_short) = row.names(SNVH_data_short)\n\n\n### next we gonna compute the observation statistics we have\nob_AFR_mean_short = apply(SNVH_data_short[,1:70],1,mean)\nob_CEU_mean_short = apply(SNVH_data_short[,71:399],1,mean)\nob_ASIAN_mean_short = apply(SNVH_data_short[,400:412],1,mean)\nob_OTHER_mean_short = apply(SNVH_data_short[,412:654],1,mean)\n\n### so we can compute the p value now\np_AFR_enrichment = sapply(1:6645,function(x)sum(ob_AFR_mean_short[x]<AFR_mean_short[x,])/500)\np_CEU_enrichment = sapply(1:6645,function(x)sum(ob_CEU_mean_short[x]<CEU_mean_short[x,])/500)\np_ASIAN_enrichment = sapply(1:6645,function(x)sum(ob_ASIAN_mean_short[x]<ASIAN_mean_short[x,])/500)\np_OTHER_enrichment = sapply(1:6645,function(x)sum(ob_OTHER_mean_short[x]<OTHER_mean_short[x,])/500)\n\np_AFR_enrichment[1:20]\n# we will see if where the enrichment are, you can set your sinificant level, \n# here I will use 1 out of 500\n\nSNVH_AFR_enrich_short <- which(p_AFR_enrichment<1/500)\nlength(SNVH_AFR_enrich_short)\n#291 gnes of interest\nSNVH_CEU_enrich_short <-which(p_CEU_enrichment<1/500)\nSNVH_ASIAN_enrich_short <-which(p_ASIAN_enrichment<1/500)\nSNVH_OTHER_enrich_short <-which(p_OTHER_enrichment<1/500)\n#SNVH_AFR_enrich_short_genes <- rownames(SNVH_data_short)[which(p_AFR_enrichment<1/500)]\n#SNVH_CEU_enrich_short_genes <- rownames(SNVH_data_short)[which(p_CEU_enrichment<1/500)]\n#SNVH_ASIAN_enrich_short_genes <- rownames(SNVH_data_short)[which(p_ASIAN_enrichment<1/500)]\n#SNVH_OTHER_enrich_short_genes <- rownames(SNVH_data_short)[which(p_OTHER_enrichment<1/500)]\nsaveRDS(SNVH_AFR_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/SNVH_AFR_enriched.Rds\")\nsaveRDS(SNVH_CEU_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/SNVH_CEU_enriched.Rds\")\nsaveRDS(SNVH_ASIAN_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/SNVH_ASIAN_enriched.Rds\")\nsaveRDS(SNVH_OTHER_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/SNVH_OTHER_enriched.Rds\")\nrownames(SNVH_data_short)[129]\n##############              Save enrichment table####################\n######       SNVH_ethnicity_enrich_short is the row number of significance for that particlar ethnicity##########\n####################### SNVH_n is the named version of the SNVH speicific genees and then it is sub categorized by wether the pt is calling themseves one race or another.\nSNVH_sig_AFR <- SNVH_n_AFR[SNVH_AFR_enrich_short,]\nSNVH_sig_CEU <- SNVH_n_CEU[SNVH_CEU_enrich_short,]\nSNVH_sig_ASIAN <- SNVH_n_ASIAN[SNVH_ASIAN_enrich_short,]\nSNVH_sig_OTHER <- SNVH_n_Other[SNVH_OTHER_enrich_short,]\n\napply(SNVH_sig_AFR,1,sum)\nwhich(sapply(SNVH_sig_AFR,is.numeric)==FALSE)\nSNVH_sig_AFR[,46] = sapply(SNVH_sig_AFR[,46], as.double)\n\ndim(SNVH_n_AFR)\n#6645 71(1st column gene names)\ndim(SNVH_sig_AFR)\n#291 71\nrownames(SNVH_sig_AFR) <- SNVH_sig_AFR$GENES\nSNVH_sig_AFR[1:10,1:10]\nSNVH_sig_AFR <- SNVH_sig_AFR[-1]\n#1805 (number of genes of interest for CEU)\nwrite.table(SNVH_sig_AFR, file = \"/Volumes/home/greally-lab/T_Trial/SNVH_p002_AFR.txt\", sep = \"\\t\")\nwrite.table(SNVH_sig_CEU, file = \"/Volumes/home/greally-lab/T_Trial/SNVH_p002_CEU.txt\", sep = \"\\t\")\nwrite.table(SNVH_sig_ASIAN, file = \"/Volumes/home/greally-lab/T_Trial/SNVH_p002_ASIAN.txt\", sep = \"\\t\")\nwrite.table(SNVH_sig_OTHER, file = \"/Volumes/home/greally-lab/T_Trial/SNVH_p002_OTHER.txt\", sep = \"\\t\")\n\napply(SNVH_sig_CEU,1,sum)\nwhich(sapply(SNVH_sig_CEU,is.numeric)==FALSE)\n\n# let's take a look at the index I set to be enriched in CEU again\nwhich(p_AFR_enrichment<1/500)\nwhich(p_OTHER_enrichment<1/500)\n\n\n##############################Double checking the values of the tables####################################\n############### Variables for table\nSNVH_AFR = read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_AFR.txt\")\nSNVH_CEU = read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_CEU.txt\")\nSNVH_ASIAN = read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_ASIAN.txt\")\nSNVH_OTHER = read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_OTHER.txt\")\n\nrownames(SNVH_OTHER) <- SNVH_OTHER$GENES\n\nSNVH_OTHER <- SNVH_OTHER[-1]\nSNVH_OTHER[1:10,1:10]\n\n\nrownames(SNVH_CEU) = SNVH_CEU$GENES\nSNVH_CEU = SNVH_CEU[-1]\nSNVH_CEU[1:10,1:10]\n\ndim(SNVH_n_AFR)\n#6645 71(1st column gene names)\ndim(SNVH_sig_AFR)\n#291 71\ndim(SNVH_CEU)\n#1805 329\n\n#########################Making new table with the statistically significant values###################################################\nSNVH_CEU2plus = which(apply(SNVH_CEU,1,function(x)sum(x)>1))\nlength(SNVH_CEU2plus)\n#323\nSNVH_AFR2plus = which(apply(SNVH_AFR,1,function(x)sum(x)>1))\nlength(SNVH_AFR2plus)\n#9\n\nwhich(sapply(SNVH_OTHER,is.numeric)==FALSE)\n#SNVH_AFR[,46] = sapply(SNVH_AFR[,46], as.double)\n\napply(SNVH_CEU,1,sum)\n#Most of these genes are at 1, but some are 0 I will remove the 0s\n#this method will not work because the row numbers between tables are not the same use the lower mehthod\nSNVH_AFR_CEU_2plus = rbind(SNVH_data_short[SNVH_AFR2plus,1:400],SNVH_data_short[SNVH_CEU2plus,1:400]) \ndim(SNVH_AFR_CEU_2plus)\nSNVH_AFR_CEU_2plus[1:20,1:20]\n#332 rows! perfect\n#need to double check for duplicates\n####################Making matrix with only gthat show up in at least 3 pts for each group##########################\nrnames_SNVH_AFR = names(which(apply(SNVH_AFR,1,function(x)sum(x)>2)))\n#SNVH_AFR_etab = SNVH_data_short[rnames_SNVH_AFR,1:70]\n#apply(SNVH_AFR_etab,1,sum)\nrnames_SNVH_CEU = names(which(apply(SNVH_CEU,1,function(x)sum(x)>2)))\nrnames_SNVH_ASIAN = names(which(apply(SNVH_ASIAN,1,function(x)sum(x)>2)))\nrnames_SNVH_OTHER = names(which(apply(SNVH_OTHER,1,function(x)sum(x)>2)))\n#rnames matrices give the genes from each ethnicity that are statistically significant and have at least 5 pateitnts with the mutation\n#unique sorted the rnmaes matrices to make sure that there were no dulicates also the names are different bu tht enumbers may be similareso the names are more importatnt\nSNVH_rnames = unique(sort(c(rnames_SNVH_AFR,rnames_SNVH_CEU,rnames_SNVH_ASIAN,rnames_SNVH_OTHER)))\nSNVH_enrich_table =SNVH_data_short[SNVH_rnames,]\nsum(SNVH_enrich_table[4,])\ndim(SNVH_enrich_table)\n#122 654\n#This table is organized by race 1-70 AFR,711-399CEU,400-412 ASIAN, 413-654\n#at least 3pts have the mutations that passed the permutation filter after passign the INDELH filter\n# THis is ordered by ethnicity with AFR followed by \nwrite.table(SNVH_enrich_table, file = \"/Volumes/home/greally-lab/T_Trial/SNVH_enrichment_table_p002_n3.txt\", sep = \"\\t\")\n\n\n```\nSNV Modifier table\n```{r, SNVM}\n##Repeat the seperation  and permutation for each pass type\nSNVM_n<-readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVMOD_n.Rds\")\nSNVM_n[1:5,1:5]\noptions(stringsAsFactors = FALSE)\nclass(SNVM_n[,5])\n\nSNVM_n_AFR <-as.data.frame(SNVM_n[1])\nSNVM_n_CEU <- as.data.frame(SNVM_n[1])\nSNVM_n_Other <- as.data.frame(SNVM_n[1])\nSNVM_n_ASIAN <- as.data.frame(SNVM_n[1])\n\nx<-16\n\nfor(x in 2:ncol(SNVM_n)){\n  if(match(paste0(\"TCGA-\",colnames(SNVM_n)[x]),AFR_PT$bcr_patient_barcode, nomatch = 0) > 0){\n    tempcol <- as.data.frame(SNVM_n[,x],stingsAsFactors = FALSE)\n    cname<- colnames(SNVM_n)[x]\n    colnames(tempcol) <- cname\n    SNVM_n_AFR <- cbind(SNVM_n_AFR,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVM_n)[x]),CEU_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVM_n[,x])\n    cname <- colnames(SNVM_n)[x]\n    colnames(tempcol) <- cname\n    SNVM_n_CEU <- cbind(SNVM_n_CEU,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVM_n)[x]),Other_PT$bcr_patient_barcode,nomatch = 0) >0){\n    tempcol <- as.data.frame(SNVM_n[,x])\n    cname<- colnames(SNVM_n)[x]\n    colnames(tempcol) <- cname\n    SNVM_n_Other <- cbind(SNVM_n_Other,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVM_n)[x]),ASIAN_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVM_n[,x])\n    cname <- colnames(SNVM_n)[x]\n    colnames(tempcol) <- cname\n    SNVM_n_ASIAN <- cbind(SNVM_n_ASIAN,tempcol)\n  }\n} \nSNVM_n[,1]\ndim(SNVM_n_Other)\ndim(AFR_PT)\nSNVM_n_AFR[1:5,]\nsum(ncol(SNVM_n_AFR),ncol(SNVM_n_CEU),ncol(SNVM_n_ASIAN),ncol(SNVM_n_Other))\n#658 columns = same as SNVH\nSNVM_data_short <- cbind(SNVM_n_AFR,SNVM_n_CEU[,2:330],SNVM_n_ASIAN[2:14],SNVM_n_Other[,2:243])\nrownames(SNVM_data_short) <- SNVM_data_short$GENES\nSNVM_data_short[1:5,1:5]\nSNVM_data_short <-SNVM_data_short[-1]\nwrite.table(SNVM_data_short,\"/Volumes/home/greally-lab/T_Trial/SVNM_Named_ordered.txt\",sep = \"\\t\")\ndim(SNVM_data_short)\n#38745 654 - missing 3 samples. Still not sure what happened = SNVM_n(16,359,624)\nSNVM_hig=apply(SNVM_data_short,1,function(x)sum(x>0))\n\n\n########################################## Choosing genes >10################################################\nSNVM_SIG = which(SNVM_hig>10)\nSig_vector <- as.vector(SNVH_SIG)\nSNVM_data <- SNVM_data_short[SNVM_SIG,]\ndim(SNVM_data)\n#15237 654 (cut the number of genes of interest in 1/2)\nwrite.table(SNVM_data,\"/Volumes/home/greally-lab/T_Trial/SNVM_Named_ordered_sig.txt\",sep = \"\\t\")\ncolnames(SNVM_data_short)[2]\n\n########################################  Determining missing values #############################################\nMissing_columns <- which(is.na(match(colnames(SNVM_n)[-1],substr(colnames(SNVM_data_short),1,7))))\n#The same columns are missing this confirms that the issue is the lack of meta datas not an issue in my code. I could just add the non labeled patients to \nmatch(paste0(\"TCGA-\",colnames(SNVM_n)[624]),META_data$bcr_patient_barcode)\n#Missing Meta data for theses 3 patients! So its all good. We will contindue without them since there is no self identification\nmatch(colnames(SNVM_data_short)[-1],colnames(SNVM_n)[-1])\npmatch(colnames(SNVM_n)[16],colnames(SNVM_data_short),duplicates.ok = TRUE)\ncolnames(SNVM_data_short)[417]\nSNVM_n[1:5,1:20]\n\n\nsaveRDS(SNVM_data_short, file =\"/Volumes/home/greally-lab/T_Trial/SNVM_Named_ordered.Rds\")\n\n# we could see there are few more genes enriched than what I simulated, it could be true enrichment during the simulation,\n# it also could be false positives due to statistical test. But somehow, we detected all the signal I set to be true positives\n# so we can get a list of candidate gene with statsitical significance here.\n\n#################################################Permuation############################################################\n\nAFR_mean = NULL\nCEU_mean = NULL\nOTHER_mean = NULL\nASIAN_mean = NULL\n\n\n#read in the data each time\nSNVM_data <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVM_Named_ordered_short.txt\")\ndim(SNVM_data)\nhead(SNVM_data)\n#row names already specified\n#row.names(SNVM_data) <- SNVM_data$GENES\n#SNVM_data <-SNVM_data[-1]\n#SNVM_data[,5]\n#rownames(SNVM_data)\nclass(SNVM_data[,1])\nsum(SNVM_data[,2])\n#apply(SNVM_data,2,as.numeric(SNVM_data))\n#SNVM_data[,2] <- as.numeric(levels(SNVM_data[,2]))[SNVM_data[,2]]\n\noptions(stringsAsFactors = F)\nset.seed(1)\nfor (i in 1:1000){\n    if(i%%100==0) print(i)\n  #remember to skip the first column it is genes\n    tmp_data = t(apply(SNVM_data,1,sample))\n    #class(tmp_data[1,1])\n    #as.numeric(tmp_data[1,1])\n    # here instead of collect the permuated data everytime,\n    # we will only collect statistical values to save memory\n    # we will collect median/mean of number of SNVs in that gene\n    # in each population (or other values you are interested in) \n\n    sub_AFR_mean = apply(tmp_data[,1:70],1,mean)\n    sub_CEU_mean = apply(tmp_data[,71:399],1,mean)\n    sub_ASIAN_mean = apply(tmp_data[,400:412],1,mean)\n    sub_OTHER_mean = apply(tmp_data[,413:654],1,mean)\n    ###Testing to see some sample sums\n    #sum(sub_ASIAN_mean) 23 .02066\n    #sum(sub_ASIAN_mean) = 25\n    #sum(sub_CEU_mean) = 23.21429\n    \n    AFR_mean = cbind(AFR_mean, sub_AFR_mean)\n    CEU_mean = cbind(CEU_mean, sub_CEU_mean)\n    ASIAN_mean = cbind(ASIAN_mean,sub_ASIAN_mean)\n    OTHER_mean = cbind(OTHER_mean, sub_OTHER_mean)\n}\n\n\n## the result say AFR_mean\n## each column is the statistics from one permutation, each row is the sampled distribution of randomness\n#row names have already been establisthed\n# Commented out the row names becase we care about the gene names\ncolnames(AFR_mean) = paste0(\"permute\",seq(1:1000))\nAFR_mean[1:10,1:10]\n#rownames(AFR_mean) = row.names(SNVM_data)\ncolnames(CEU_mean) = paste0(\"permute\",seq(1:1000))\nCEU_mean[1:10,1:10]\n#rownames(CEU_mean) = row.names(SNVM_data)\ncolnames(ASIAN_mean) = paste0(\"permute\",seq(1:1000))\n#rownames(ASIAN_mean) = row.names(SNVM_data)\ncolnames(OTHER_mean) = paste0(\"permute\",seq(1:1000))\n#rownames(OTHER_mean) = row.names(SNVM_data)\n\n\n### next we gonna compute the observation statistics we have\nob_AFR_mean = apply(SNVM_data[,1:70],1,mean)\nob_CEU_mean = apply(SNVM_data[,71:399],1,mean)\nob_ASIAN_mean = apply(SNVM_data[,400:412],1,mean)\nob_OTHER_mean = apply(SNVM_data[,412:654],1,mean)\n\n### so we can compute the p value now\np_AFR_enrichment = sapply(1:15237,function(x)sum(ob_AFR_mean[x]<AFR_mean[x,])/500)\np_CEU_enrichment = sapply(1:15237,function(x)sum(ob_CEU_mean[x]<CEU_mean[x,])/500)\np_ASIAN_enrichment = sapply(1:15237,function(x)sum(ob_ASIAN_mean[x]<ASIAN_mean[x,])/500)\np_OTHER_enrichment = sapply(1:15237,function(x)sum(ob_OTHER_mean[x]<OTHER_mean[x,])/500)\n\np_AFR_enrichment[1:20]\n# we will see if where the enrichment are, you can set your sinificant level, \n# here I will use 1 out of 500\n\nSNVM_AFR_enrich <- which(p_AFR_enrichment<1/500)\nlength(SNVM_AFR_enrich)\n#291 gnes of interest\nSNVM_CEU_enrich <-which(p_CEU_enrichment<1/500)\nSNVM_ASIAN_enrich <-which(p_ASIAN_enrichment<1/500)\nSNVM_OTHER_enrich <-which(p_OTHER_enrichment<1/500)\nSNVM_AFR_enrich_genes <- rownames(SNVM_data)[which(p_AFR_enrichment<1/500)]\nSNVM_CEU_enrich_genes <- rownames(SNVM_data)[which(p_CEU_enrichment<1/500)]\nSNVM_ASIAN_enrich_genes <- rownames(SNVM_data)[which(p_ASIAN_enrichment<1/500)]\nSNVM_OTHER_enrich_genes <- rownames(SNVM_data)[which(p_OTHER_enrichment<1/500)]\n#saveRDS(SNVM_AFR_enrich_genes, file = \"/Volumes/home/greally-lab/T_Trial/SNVM_AFR_enriched.Rds\")\n#saveRDS(SNVM_CEU_enrich_genes, file = \"/Volumes/home/greally-lab/T_Trial/SNVM_CEU_enriched.Rds\")\n#saveRDS(SNVM_ASIAN_enrich_gen, file = \"/Volumes/home/greally-lab/T_Trial/SNVM_ASIAN_enriched.Rds\")\n#saveRDS(SNVM_OTHER_enrich, file = \"/Volumes/home/greally-lab/T_Trial/SNVM_OTHER_enriched.Rds\")\nrownames(SNVM_data)[129]\n##############Save enrichment table####################\n\nSNVM_sig_AFR <- SNVM_n_AFR[SNVM_AFR_enrich,]\nSNVM_sig_CEU <- SNVM_n_CEU[SNVM_CEU_enrich,]\nSNVM_sig_ASIAN <- SNVM_n_ASIAN[SNVM_ASIAN_enrich,]\nSNVM_sig_OTHER <- SNVM_n_Other[SNVM_OTHER_enrich,]\n\n\ndim(SNVM_n_AFR)\n#6645 71(1st column gene names)\ndim(SNVM_sig_AFR)\nrownames(SNVM_sig_AFR) <- SNVM_sig_AFR$GENES\nSNVM_sig_AFR[1:10,1:10]\nSNVM_sig_CEU <- SNVM_sig_AFR[-1]\n#291 (number of genes of interest for CEU)\nwrite.table(SNVM_sig_AFR, file = \"/Volumes/home/greally-lab/T_Trial/SNVM_p002_AFR.txt\", sep = \"\\t\")\nwrite.table(SNVM_sig_CEU, file = \"/Volumes/home/greally-lab/T_Trial/SNVM_p002_CEU.txt\", sep = \"\\t\")\nwrite.table(SNVM_sig_ASIAN, file = \"/Volumes/home/greally-lab/T_Trial/SNVM_p002_ASIAN.txt\", sep = \"\\t\")\nwrite.table(SNVM_sig_OTHER, file = \"/Volumes/home/greally-lab/T_Trial/SNVM_p002_OTHER.txt\", sep = \"\\t\")\n\n\n# let's take a look at the index I set to be enriched in CEU again\nwhich(p_AFR_enrichment<1/500)\nwhich(p_OTHER_enrichment<1/500)\n```\n\n```{r, SNVLOW pass}\n##Repeat the seperation  and permutation for each pass type\nSNVL_n<-readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVLOW_n.Rds\")\nSNVL_n[1:5,1:5]\noptions(stringsAsFactors = FALSE)\nclass(SNVL_n[,5])\n\nSNVL_n_AFR <-as.data.frame(SNVL_n[1])\nSNVL_n_CEU <- as.data.frame(SNVL_n[1])\nSNVL_n_Other <- as.data.frame(SNVL_n[1])\nSNVL_n_ASIAN <- as.data.frame(SNVL_n[1])\n\nx<-16\n\nfor(x in 2:ncol(SNVL_n)){\n  if(match(paste0(\"TCGA-\",colnames(SNVL_n)[x]),AFR_PT$bcr_patient_barcode, nomatch = 0) > 0){\n    tempcol <- as.data.frame(SNVL_n[,x],stingsAsFactors = FALSE)\n    cname<- colnames(SNVL_n)[x]\n    colnames(tempcol) <- cname\n    SNVL_n_AFR <- cbind(SNVL_n_AFR,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVL_n)[x]),CEU_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVL_n[,x])\n    cname <- colnames(SNVL_n)[x]\n    colnames(tempcol) <- cname\n    SNVL_n_CEU <- cbind(SNVL_n_CEU,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVL_n)[x]),Other_PT$bcr_patient_barcode,nomatch = 0) >0){\n    tempcol <- as.data.frame(SNVL_n[,x])\n    cname<- colnames(SNVL_n)[x]\n    colnames(tempcol) <- cname\n    SNVL_n_Other <- cbind(SNVL_n_Other,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVL_n)[x]),ASIAN_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVL_n[,x])\n    cname <- colnames(SNVL_n)[x]\n    colnames(tempcol) <- cname\n    SNVL_n_ASIAN <- cbind(SNVL_n_ASIAN,tempcol)\n  }\n} \nSNVL_n[,1]\ndim(SNVL_n_Other)\ndim(AFR_PT)\nSNVL_n_AFR[1:5,]\nsum(ncol(SNVL_n_AFR),ncol(SNVL_n_CEU),ncol(SNVL_n_ASIAN),ncol(SNVL_n_Other))\n#658 columns = same as SNVH\nSNVL_data_short <- cbind(SNVL_n_AFR,SNVL_n_CEU[,2:330],SNVL_n_ASIAN[2:14],SNVL_n_Other[,2:243])\nrownames(SNVL_data_short) <- SNVL_data_short$GENES\nSNVL_data_short[1:5,1:5]\nSNVL_data_short <-SNVL_data_short[-1]\nwrite.table(SNVL_data_short,\"/Volumes/home/greally-lab/T_Trial/SNVL_Named_ordered.txt\",sep = \"\\t\")\ndim(SNVL_data_short)\n#14208 654 - missing 3 samples. Still not sure what happened = SNVL_n(16,359,624)\nSNVL_hig = apply(SNVL_data_short,1,function(x)sum(x>0))\n\n\n########################################## Choosing genes >10################################################\nSNVL_SIG = which(SNVL_hig>10)\nSig_vector <- as.vector(SNVH_SIG)\nSNVL_data <- SNVL_data_short[SNVL_SIG,]\ndim(SNVL_data)\n#930 654 (cut the number of genes of interest by 1/3)\nwrite.table(SNVL_data,\"/Volumes/home/greally-lab/T_Trial/SNVL_Named_ordered_sig.txt\",sep = \"\\t\")\ncolnames(SNVL_data_short)[1]\n\n########################################  Determining missing values #############################################\nMissing_columns <- which(is.na(match(colnames(SNVL_n)[-1],substr(colnames(SNVL_data_short),1,7))))\n#The same columns are missing this confirms that the issue is the lack of meta datas not an issue in my code. I could just add the non labeled patients to \nmatch(paste0(\"TCGA-\",colnames(SNVL_n)[624]),META_data$bcr_patient_barcode)\n#Missing Meta data for theses 3 patients! So its all good. We will contindue without them since there is no self identification\nmatch(colnames(SNVL_data_short)[-1],colnames(SNVL_n)[-1])\npmatch(colnames(SNVL_n)[16],colnames(SNVL_data_short),duplicates.ok = TRUE)\ncolnames(SNVL_data_short)[417]\nSNVL_n[1:5,1:20]\n\n\nsaveRDS(SNVL_data_short, file =\"/Volumes/home/greally-lab/T_Trial/SNVL_Named_ordered_sig.Rds\")\n\n# we could see there are few more genes enriched than what I simulated, it could be true enrichment during the simulation,\n# it also could be false positives due to statistical test. But somehow, we detected all the signal I set to be true positives\n# so we can get a list of candidate gene with statsitical significance here.\n\n#################################################Permuation############################################################\n\nAFR_mean = NULL\nCEU_mean = NULL\nOTHER_mean = NULL\nASIAN_mean = NULL\n\n\n#read in the data each time\nSNVL_data <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVL_Named_ordered_sig.txt\")\ndim(SNVL_data)\nhead(SNVL_data)\n#row names already specified\n#row.names(SNVL_data) <- SNVL_data$GENES\n#SNVL_data <-SNVL_data[-1]\n#SNVL_data[,5]\n#rownames(SNVL_data)\nclass(SNVL_data[,1])\nsum(SNVL_data[,2])\n#apply(SNVL_data,2,as.numeric(SNVL_data))\n#SNVL_data[,2] <- as.numeric(levels(SNVL_data[,2]))[SNVL_data[,2]]\n\noptions(stringsAsFactors = F)\nset.seed(1)\nfor (i in 1:1000){\n    if(i%%100==0) print(i)\n  #remember to skip the first column it is genes\n    tmp_data = t(apply(SNVL_data,1,sample))\n    #class(tmp_data[1,1])\n    #as.numeric(tmp_data[1,1])\n    # here instead of collect the permuated data everytime,\n    # we will only collect statistical values to save memory\n    # we will collect median/mean of number of SNVs in that gene\n    # in each population (or other values you are interested in) \n\n    sub_AFR_mean = apply(tmp_data[,1:70],1,mean)\n    sub_CEU_mean = apply(tmp_data[,71:399],1,mean)\n    sub_ASIAN_mean = apply(tmp_data[,400:412],1,mean)\n    sub_OTHER_mean = apply(tmp_data[,413:654],1,mean)\n    ###Testing to see some sample sums\n    #sum(sub_ASIAN_mean) 23 .02066\n    #sum(sub_ASIAN_mean) = 25\n    #sum(sub_CEU_mean) = 23.21429\n    \n    AFR_mean = cbind(AFR_mean, sub_AFR_mean)\n    CEU_mean = cbind(CEU_mean, sub_CEU_mean)\n    ASIAN_mean = cbind(ASIAN_mean,sub_ASIAN_mean)\n    OTHER_mean = cbind(OTHER_mean, sub_OTHER_mean)\n}\n\n\n## the result say AFR_mean\n## each column is the statistics from one permutation, each row is the sampled distribution of randomness\n#row names have already been establisthed\n# Commented out the row names becase we care about the gene names\ncolnames(AFR_mean) = paste0(\"permute\",seq(1:1000))\nAFR_mean[1:10,1:10]\n#rownames(AFR_mean) = row.names(SNVL_data)\ncolnames(CEU_mean) = paste0(\"permute\",seq(1:1000))\nCEU_mean[1:10,1:10]\nnrow(AFR_mean)\n#rownames(CEU_mean) = row.names(SNVL_data)\ncolnames(ASIAN_mean) = paste0(\"permute\",seq(1:1000))\n#rownames(ASIAN_mean) = row.names(SNVL_data)\ncolnames(OTHER_mean) = paste0(\"permute\",seq(1:1000))\n#rownames(OTHER_mean) = row.names(SNVL_data)\n\n\n### next we gonna compute the observation statistics we have\nob_AFR_mean = apply(SNVL_data[,1:70],1,mean)\nob_CEU_mean = apply(SNVL_data[,71:399],1,mean)\nob_ASIAN_mean = apply(SNVL_data[,400:412],1,mean)\nob_OTHER_mean = apply(SNVL_data[,412:654],1,mean)\n\n### so we can compute the p value now\np_AFR_enrichment = sapply(1:930,function(x)sum(ob_AFR_mean[x]<AFR_mean[x,])/500)\np_CEU_enrichment = sapply(1:930,function(x)sum(ob_CEU_mean[x]<CEU_mean[x,])/500)\np_ASIAN_enrichment = sapply(1:930,function(x)sum(ob_ASIAN_mean[x]<ASIAN_mean[x,])/500)\np_OTHER_enrichment = sapply(1:930,function(x)sum(ob_OTHER_mean[x]<OTHER_mean[x,])/500)\n\np_AFR_enrichment[1:20]\n# we will see if where the enrichment are, you can set your sinificant level, \n# here I will use 1 out of 500\n\nSNVL_AFR_enrich <- which(p_AFR_enrichment<1/500)\nsum()\nlength(SNVL_AFR_enrich)\n#7 gnes of interest\nSNVL_CEU_enrich <- which(p_CEU_enrichment<1/500)\n#6 genes\nSNVL_ASIAN_enrich <-which(p_ASIAN_enrichment<1/500)\nSNVL_OTHER_enrich <-which(p_OTHER_enrichment<1/500)\nSNVL_AFR_enrich_genes <- rownames(SNVL_data)[which(p_AFR_enrichment<1/500)]\nSNVL_CEU_enrich_genes <- rownames(SNVL_data)[which(p_CEU_enrichment<1/500)]\nSNVL_ASIAN_enrich_genes <- rownames(SNVL_data)[which(p_ASIAN_enrichment<1/500)]\nSNVL_OTHER_enrich_genes <- rownames(SNVL_data)[which(p_OTHER_enrichment<1/500)]\nsaveRDS(SNVL_AFR_enrich_genes, file = \"/Volumes/home/greally-lab/T_Trial/SNVL_AFR_enriched.Rds\")\nsaveRDS(SNVL_CEU_enrich_genes, file = \"/Volumes/home/greally-lab/T_Trial/SNVL_CEU_enriched.Rds\")\nsaveRDS(SNVL_ASIAN_enrich_genes, file = \"/Volumes/home/greally-lab/T_Trial/SNVL_ASIAN_enriched.Rds\")\nsaveRDS(SNVL_OTHER_enrich_genes, file = \"/Volumes/home/greally-lab/T_Trial/SNVL_OTHER_enriched.Rds\")\nrownames(SNVL_data)[129]\n##############Save enrichment table####################\n\nSNVL_sig_AFR <- SNVL_data[SNVL_AFR_enrich,]\nSNVL_sig_CEU <- SNVL_data[SNVL_CEU_enrich,]\nSNVL_sig_ASIAN <- SNVL_data[SNVL_ASIAN_enrich,]\nSNVL_sig_OTHER <- SNVL_data[SNVL_OTHER_enrich,]\n\nSNVL_sig_AFR[1:5,1:5]\n\ndim(SNVL_n_AFR)\n#6645 71(1st column gene names)\nclass(SNVL_sig_AFR)\nrownames(SNVL_sig_AFR) <- SNVL_sig_AFR$GENES\nSNVL_sig_AFR[1:5,1:10]\n#SNVL_sig_AFR <- SNVL_sig_AFR[-1]\n#291 (number of genes of interest for CEU)\n\n\napply(SNVL_sig_AFR,1,sum)\n# Allsignificant!! yay!\n# BBS7  LONRF3    NOX3    ROR1 RUNX1T1    XPO4  ZNF805 \n#    11      11      13      13      11      14      11 \nrownames(SNVL_sig_CEU) <- SNVL_sig_CEU$GENES\nSNVL_sig_CEU[1:5,1:10]\nSNVL_sig_CEU <- SNVL_sig_CEU[-1]\nclass(SNVL_sig_CEU)\napply(SNVL_sig_CEU[-237],1,sum)\nnumb = sapply(SNVL_sig_CEU, is.numeric)\nwhich(numb == FALSE)\n#237\napply(SNVL_sig_CEU[,71:399],1,sum)\n#KIAA1671   NOTCH1   RSPH6A   SETD1A    SSTR1     WWC3 \n#      12       21       11       12       15       16 \n\n\n#6 329\nSNVL_CEU_tab = as.matrix(SNVL_sig_CEU)\nwrite.table(SNVL_sig_AFR, file = \"/Volumes/home/greally-lab/T_Trial/SNVL_p002_AFR.txt\", sep = \"\\t\")\nwrite.table(SNVL_sig_CEU, file = \"/Volumes/home/greally-lab/T_Trial/SNVL_p002_CEU.txt\", sep = \"\\t\")\nwrite.table(SNVL_sig_ASIAN, file = \"/Volumes/home/greally-lab/T_Trial/SNVL_p002_ASIAN.txt\", sep = \"\\t\")\nwrite.table(SNVL_sig_OTHER, file = \"/Volumes/home/greally-lab/T_Trial/SNVL_p002_OTHER.txt\", sep = \"\\t\")\n\n\n# let's take a look at the index I set to be enriched in CEU again\nwhich(p_AFR_enrichment<1/500)\nwhich(p_OTHER_enrichment<1/500)\n```\n\n```{r, INDEL Portion}\n###Choosing only the significant genes## \n#HIGH_SIG=apply(SNVH_data,1,function(x)sum(x>0))\n#SNVH_SIG = which(HIGH_SIG>10)\n#Sig_vector <- as.vector(INDELH_SIG)\n#INDELH_sig_table <- apply(INDELH_data,1,function(x)sum)\n#relized that I already have tables that are only the genes of insterest fo each filter set\n#################################Re-run with small talbes#####################################\n############################################Race Stratification#####################################################\nINDELH_n<-readRDS(\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_n.Rds\")\nINDELH_n[1:5,1:5]\noptions(stringsAsFactors = FALSE)\nclass(INDELH_n[,5])\n\nINDELH_n_AFR <-as.data.frame(INDELH_n[1])\nINDELH_n_CEU <- as.data.frame(INDELH_n[1])\nINDELH_n_Other <- as.data.frame(INDELH_n[1])\nINDELH_n_ASIAN <- as.data.frame(INDELH_n[1])\n\nx<-16\n\nfor(x in 2:ncol(INDELH_n)){\n  if(match(paste0(\"TCGA-\",colnames(INDELH_n)[x]),AFR_PT$bcr_patient_barcode, nomatch = 0) > 0){\n    tempcol <- as.data.frame(INDELH_n[,x],stingsAsFactors = FALSE)\n    cname<- colnames(INDELH_n)[x]\n    colnames(tempcol) <- cname\n    INDELH_n_AFR <- cbind(INDELH_n_AFR,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(INDELH_n)[x]),CEU_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(INDELH_n[,x])\n    cname <- colnames(INDELH_n)[x]\n    colnames(tempcol) <- cname\n    INDELH_n_CEU <- cbind(INDELH_n_CEU,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(INDELH_n)[x]),Other_PT$bcr_patient_barcode,nomatch = 0) >0){\n    tempcol <- as.data.frame(INDELH_n[,x])\n    cname<- colnames(INDELH_n)[x]\n    colnames(tempcol) <- cname\n    INDELH_n_Other <- cbind(INDELH_n_Other,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(INDELH_n)[x]),ASIAN_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(INDELH_n[,x])\n    cname <- colnames(INDELH_n)[x]\n    colnames(tempcol) <- cname\n    INDELH_n_ASIAN <- cbind(INDELH_n_ASIAN,tempcol)\n  }\n} \nINDELH_n[,1]\ndim(INDELH_n_Other)\ndim(AFR_PT)\nINDELH_n_AFR[1:5,]\nsum(ncol(INDELH_n_AFR),ncol(INDELH_n_CEU),ncol(INDELH_n_ASIAN),ncol(INDELH_n_Other))\n#658 columns = correct number \nINDELH_data_short <- cbind(INDELH_n_AFR,INDELH_n_CEU[,2:330],INDELH_n_ASIAN[2:14],INDELH_n_Other[,2:243])\nrownames(INDELH_data_short) <- INDELH_data_short$GENES\nINDELH_data_short[1:5,1:5]\nINDELH_data_short <-INDELH_data_short[-1]\nwrite.table(INDELH_data_short,\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_Named_ordered.txt\",sep = \"\\t\")\ndim(INDELH_data_short)\n#6645 654 - missing 3 samples. Still not sure what happened = INDELH_n(16,359,624)\n\ncolnames(INDELH_data_short)[417]\nINDELH_n[1:5,1:20]\n\n\nsaveRDS(INDELH_data_short, file =\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_Named_ordered.Rds\")\n\n# we could see there are few more genes enriched than what I simulated, it could be true enrichment during the simulation,\n# it also could be false positives due to statistical test. But somehow, we detected all the signal I set to be true positives\n# so we can get a list of candidate gene with statsitical significance here.\n########################################## Choosing genes >10################################################\nINDELH_hig = apply(INDELH_data_short,1,function(x)sum(x>0))\nINDELH_SIG = which(INDELH_hig>5)\nSig_vector <- as.vector(INDELH_SIG)\nINDELH_data <- INDELH_data_short[INDELH_SIG,]\ndim(INDELH_data)\n#706 654 (cut the number of genes of interest by 1/3)\nwrite.table(INDELH_data,\"/Volumes/home/greally-lab/T_Trial/INDELH_Named_ordered_sig.txt\",sep = \"\\t\")\ncolnames(INDELH_data)[1]\n#################################################Permuation############################################################\nnumb = sapply(INDELH_data, is.numeric)\nwhich(numb == FALSE)\n\n\n\nAFR_mean = NULL\nCEU_mean = NULL\nOTHER_mean = NULL\nASIAN_mean = NULL\n\n\n#read in the data each time\nINDELH_data <- read.table(\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_Named_ordered.txt\")\ndim(INDELH_data)\nhead(INDELH_data)\nrow.names(INDELH_data) <- INDELH_data$GENES\nINDELH_data <-INDELH_data[-1]\n#INDELH_data[,5]\n#rownames(INDELH_data)\nclass(INDELH_data[,2])\nsum(INDELH_data[,2])\n#apply(INDELH_data,2,as.numeric(INDELH_data))\n#INDELH_data[,2] <- as.numeric(levels(INDELH_data[,2]))[INDELH_data[,2]]\n\n\n\noptions(stringsAsFactors = F)\nset.seed(1)\nfor (i in 1:1000){\n    if(i%%100==0) print(i)\n  #remember to skip the first column it is genes\n    tmp_data = t(apply(INDELH_data,1,sample))\n    #class(tmp_data[1,1])\n    #as.numeric(tmp_data[1,1])\n    # here instead of collect the permuated data everytime,\n    # we will only collect statistical values to save memory\n    # we will collect median/mean of number of SNVs in that gene\n    # in each population (or other values you are interested in) \n\n    sub_AFR_mean = apply(tmp_data[,1:70],1,mean)\n    sub_CEU_mean = apply(tmp_data[,71:399],1,mean)\n    sub_ASIAN_mean = apply(tmp_data[,400:412],1,mean)\n    sub_OTHER_mean = apply(tmp_data[,413:654],1,mean)\n    ###Testing to see some sample sums\n    #sum(sub_ASIAN_mean) 23 .02066\n    #sum(sub_ASIAN_mean) = 25\n    #sum(sub_CEU_mean) = 23.21429\n    \n    AFR_mean = cbind(AFR_mean, sub_AFR_mean)\n    CEU_mean = cbind(CEU_mean, sub_CEU_mean)\n    ASIAN_mean = cbind(ASIAN_mean,sub_ASIAN_mean)\n    OTHER_mean = cbind(OTHER_mean, sub_OTHER_mean)\n}\n\n\n## the result say AFR_mean\n## each column is the statistics from one permutation, each row is the sampled distribution of randomness\n# Commented out the row names becase we care about the gene names\ncolnames(AFR_mean_short) = paste0(\"permute\",seq(1:1042))\nAFR_mean_short[1:10,1:10]\nrownames(AFR_mean_short) = row.names(INDELH_data_short)\ncolnames(CEU_mean_short) = paste0(\"permute\",seq(1:1042))\nCEU_mean_short[1:10,1:10]\nrownames(CEU_mean_short) = row.names(INDELH_data_short)\ncolnames(ASIAN_mean_short) = paste0(\"permute\",seq(1:1042))\nrownames(ASIAN_mean_short) = row.names(INDELH_data_short)\ncolnames(OTHER_mean_short) = paste0(\"permute\",seq(1:1042))\nrownames(OTHER_mean_short) = row.names(INDELH_data_short)\ndim(CEU_mean_short)\n\n### next we gonna compute the observation statistics we have\nob_AFR_mean_short = apply(INDELH_data_short[,1:70],1,mean)\nob_CEU_mean_short = apply(INDELH_data_short[,71:399],1,mean)\nob_ASIAN_mean_short = apply(INDELH_data_short[,400:412],1,mean)\nob_OTHER_mean_short = apply(INDELH_data_short[,413:654],1,mean)\n\n### so we can compute the p value now\np_AFR_enrichment = sapply(1:7221,function(x)sum(ob_AFR_mean_short[x]<AFR_mean_short[x,])/500)\np_CEU_enrichment = sapply(1:7221,function(x)sum(ob_CEU_mean_short[x]<CEU_mean_short[x,])/500)\np_ASIAN_enrichment = sapply(1:7221,function(x)sum(ob_ASIAN_mean_short[x]<ASIAN_mean_short[x,])/500)\np_OTHER_enrichment = sapply(1:7221,function(x)sum(ob_OTHER_mean_short[x]<OTHER_mean_short[x,])/500)\n\np_AFR_enrichment[1:20]\n# we will see if where the enrichment are, you can set your sinificant level, \n# here I will use 1 out of 500\n\nINDELH_AFR_enrich_short <- which(p_AFR_enrichment<1/500)\nlength(INDELH_AFR_enrich_short)\n#291 gnes of interest\nINDELH_CEU_enrich_short <-which(p_CEU_enrichment<1/500)\nINDELH_ASIAN_enrich_short <-which(p_ASIAN_enrichment<1/500)\nINDELH_OTHER_enrich_short <-which(p_OTHER_enrichment<1/500)\nINDELH_AFR_enrich_short_genes <- rownames(INDELH_data_short)[which(p_AFR_enrichment<1/500)]\nINDELH_CEU_enrich_short_genes <- rownames(INDELH_data_short)[which(p_CEU_enrichment<1/500)]\nINDELH_ASIAN_enrich_short_genes <- rownames(INDELH_data_short)[which(p_ASIAN_enrichment<1/500)]\nINDELH_OTHER_enrich_short_genes <- rownames(INDELH_data_short)[which(p_OTHER_enrichment<1/500)]\nsaveRDS(INDELH_AFR_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_AFR_enriched.Rds\")\nsaveRDS(INDELH_CEU_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_CEU_enriched.Rds\")\nsaveRDS(INDELH_ASIAN_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_ASIAN_enriched.Rds\")\nsaveRDS(INDELH_OTHER_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_OTHER_enriched.Rds\")\nrownames(INDELH_data_short)[129]\n########################################Save enrichment table#######################################################\n\nINDELH_sig_AFR <- INDELH_data_short[INDELH_AFR_enrich_short,]\nINDELH_sig_CEU <- INDELH_data_short[INDELH_CEU_enrich_short,]\nINDELH_sig_ASIAN <- INDELH_data_short[INDELH_ASIAN_enrich_short,]\nINDELH_sig_OTHER <- INDELH_data_short[INDELH_OTHER_enrich_short,]\n\napply(INDELH_sig_AFR,1,sum)\napply(INDELH_sig_CEU,1,sum)\nwhich(sapply(INDELH_sig_CEU,is.numeric)==FALSE)\n#INDELH_sig_AFR[,46] = sapply(INDELH_sig_AFR[,46], as.double)\n\ndim(INDELH_n_AFR)\n#6645 71(1st column gene names)\ndim(INDELH_sig_AFR)\n#433 654\n\n\n####################Making matrix with only gthat show up in at least 5 pts for each group##########################\nrnames_AFR = names(which(apply(INDELH_sig_AFR,1,function(x)sum(x)>5)))\nINDELH_AFR_etab = INDELH_data_short[rnames_AFR,1:70]\napply(INDELH_AFR_etab,1,sum)\nrnames_CEU = names(which(apply(INDELH_sig_CEU,1,function(x)sum(x)>5)))\nrnames_ASIAN = names(which(apply(INDELH_sig_ASIAN,1,function(x)sum(x)>5)))\nrnames_OTHER = names(which(apply(INDELH_sig_OTHER,1,function(x)sum(x)>5)))\n#rnames matrices give the genes from each ethnicity that are statistically significant and have at least 5 pateitnts with the mutation\n#unique sorted the rnmaes matrices to make sure that there were no dulicates also the names are different bu tht enumbers may be similareso the names are more importatnt\n\nINDELH_rnames = unique(sort(c(rnames_AFR,rnames_CEU,rnames_ASIAN,rnames_OTHER)))\nINDELH_enrich_table = INDELH_data_short[INDELH_rnames,]\nsum(INDELH_enrich_table[1,])\n#6  which is ABCA6 which was significant in CEU INDEL_high so it is also high\n#This table is organized by race 1-70 AFR,711-399CEU,400-412 ASIAN, 413-654\n#at least 5pts have the mutations that passed the permutation filter after passign the INDELH filter\n# THis is ordered by ethnicity with AFR followed by \nwrite.table(INDELH_enrich_table, file = \"/Volumes/home/greally-lab/T_Trial/INDEL_enrichment_table_p002_n5.txt\", sep = \"\\t\")\n\n#rownames(INDELH_sig_AFR) <- INDELH_sig_AFR$GENES\nINDELH_data_short[1:10,1:10]\n#INDELH_sig_AFR <- INDELH_sig_AFR[-1]\n#1805 (number of genes of interest for CEU)\nwrite.table(INDELH_sig_AFR, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_p002_AFR.txt\", sep = \"\\t\")\nwrite.table(INDELH_sig_CEU, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_p002_CEU.txt\", sep = \"\\t\")\nwrite.table(INDELH_sig_ASIAN, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_p002_ASIAN.txt\", sep = \"\\t\")\nwrite.table(INDELH_sig_OTHER, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_p002_OTHER.txt\", sep = \"\\t\")\n\napply(INDELH_sig_CEU,1,sum)\n#which(sapply(INDELH_sig_CEU,is.numeric)==FALSE)\n\n# let's take a look at the index I set to be enriched in CEU again\nwhich(p_AFR_enrichment<1/500)\nwhich(p_OTHER_enrichment<1/500)\n\n\n##############################Double checking the values of the tables####################################\n\nINDELH_AFR = read.table(\"/Volumes/home/greally-lab/T_Trial/INDELH_p002_AFR.txt\")\nINDELH_CEU = read.table(\"/Volumes/home/greally-lab/T_Trial/INDELH_p002_CEU.txt\")\n \nrownames(INDELH_AFR) <- INDELH_AFR$GENES\nINDELH_AFR <- INDELH_AFR[-1]\nINDELH_AFR[1:10,1:10]\n\n\nrownames(INDELH_CEU) = INDELH_CEU$GENES\nINDELH_CEU = INDELH_CEU[-1]\nINDELH_CEU[1:10,1:10]\n\ndim(INDELH_n_AFR)\n#6645 71(1st column gene names)\ndim(INDELH_sig_AFR)\n#291 71\ndim(INDELH_CEU)\n#1805 329\n\n#################Making new table with the statistically significant values###################################################\n\n```\n\n```{r}\n############################################Race Stratification#####################################################\nINDELH_n<-readRDS(\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_n.Rds\")\nINDELH_n[1:5,1:5]\noptions(stringsAsFactors = FALSE)\nclass(INDELH_n[,5])\n\nINDELH_n_AFR <-as.data.frame(INDELH_n[1])\nINDELH_n_CEU <- as.data.frame(INDELH_n[1])\nINDELH_n_Other <- as.data.frame(INDELH_n[1])\nINDELH_n_ASIAN <- as.data.frame(INDELH_n[1])\n\nx<-16\n\nfor(x in 2:ncol(INDELH_n)){\n  if(match(paste0(\"TCGA-\",colnames(INDELH_n)[x]),AFR_PT$bcr_patient_barcode, nomatch = 0) > 0){\n    tempcol <- as.data.frame(INDELH_n[,x],stingsAsFactors = FALSE)\n    cname<- colnames(INDELH_n)[x]\n    colnames(tempcol) <- cname\n    INDELH_n_AFR <- cbind(INDELH_n_AFR,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(INDELH_n)[x]),CEU_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(INDELH_n[,x])\n    cname <- colnames(INDELH_n)[x]\n    colnames(tempcol) <- cname\n    INDELH_n_CEU <- cbind(INDELH_n_CEU,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(INDELH_n)[x]),Other_PT$bcr_patient_barcode,nomatch = 0) >0){\n    tempcol <- as.data.frame(INDELH_n[,x])\n    cname<- colnames(INDELH_n)[x]\n    colnames(tempcol) <- cname\n    INDELH_n_Other <- cbind(INDELH_n_Other,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(INDELH_n)[x]),ASIAN_PT$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(INDELH_n[,x])\n    cname <- colnames(INDELH_n)[x]\n    colnames(tempcol) <- cname\n    INDELH_n_ASIAN <- cbind(INDELH_n_ASIAN,tempcol)\n  }\n} \nINDELH_n[,1]\ndim(INDELH_n_Other)\ndim(AFR_PT)\nINDELH_n_AFR[1:5,]\nsum(ncol(INDELH_n_AFR),ncol(INDELH_n_CEU),ncol(INDELH_n_ASIAN),ncol(INDELH_n_Other))\n#658 columns = correct number \nINDELH_data_short <- cbind(INDELH_n_AFR,INDELH_n_CEU[,2:330],INDELH_n_ASIAN[2:14],INDELH_n_Other[,2:243])\nrownames(INDELH_data_short) <- INDELH_data_short$GENES\nINDELH_data_short[1:5,1:5]\nINDELH_data_short <-INDELH_data_short[-1]\nwrite.table(INDELH_data_short,\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_Named_ordered.txt\",sep = \"\\t\")\ndim(INDELH_data_short)\n#6645 654 - missing 3 samples. Still not sure what happened = INDELH_n(16,359,624)\n\ncolnames(INDELH_data_short)[417]\nINDELH_n[1:5,1:20]\n\n\nsaveRDS(INDELH_data_short, file =\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_Named_ordered.Rds\")\n\n# we could see there are few more genes enriched than what I simulated, it could be true enrichment during the simulation,\n# it also could be false positives due to statistical test. But somehow, we detected all the signal I set to be true positives\n# so we can get a list of candidate gene with statsitical significance here.\n########################################## Choosing genes >10################################################\nINDELH_hig = apply(INDELH_data_short,1,function(x)sum(x>0))\nINDELH_SIG = which(INDELH_hig>5)\nSig_vector <- as.vector(INDELH_SIG)\nINDELH_data <- INDELH_data_short[INDELH_SIG,]\ndim(INDELH_data)\n#706 654 (cut the number of genes of interest by 1/3)\nwrite.table(INDELH_data,\"/Volumes/home/greally-lab/T_Trial/INDELH_Named_ordered_sig.txt\",sep = \"\\t\")\ncolnames(INDELH_data)[1]\n#################################################Permuation############################################################\nnumb = sapply(INDELH_data, is.numeric)\nwhich(numb == FALSE)\n\n\n\nAFR_mean = NULL\nCEU_mean = NULL\nOTHER_mean = NULL\nASIAN_mean = NULL\n\n\n#read in the data each time\nINDELH_data <- read.table(\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_Named_ordered.txt\")\ndim(INDELH_data)\nhead(INDELH_data)\nrow.names(INDELH_data) <- INDELH_data$GENES\nINDELH_data <-INDELH_data[-1]\n#INDELH_data[,5]\n#rownames(INDELH_data)\nclass(INDELH_data[,2])\nsum(INDELH_data[,2])\n#apply(INDELH_data,2,as.numeric(INDELH_data))\n#INDELH_data[,2] <- as.numeric(levels(INDELH_data[,2]))[INDELH_data[,2]]\n\n\n\noptions(stringsAsFactors = F)\nset.seed(1)\nfor (i in 1:1000){\n    if(i%%100==0) print(i)\n  #remember to skip the first column it is genes\n    tmp_data = t(apply(INDELH_data,1,sample))\n    #class(tmp_data[1,1])\n    #as.numeric(tmp_data[1,1])\n    # here instead of collect the permuated data everytime,\n    # we will only collect statistical values to save memory\n    # we will collect median/mean of number of SNVs in that gene\n    # in each population (or other values you are interested in) \n\n    sub_AFR_mean = apply(tmp_data[,1:70],1,mean)\n    sub_CEU_mean = apply(tmp_data[,71:399],1,mean)\n    sub_ASIAN_mean = apply(tmp_data[,400:412],1,mean)\n    sub_OTHER_mean = apply(tmp_data[,413:654],1,mean)\n    ###Testing to see some sample sums\n    #sum(sub_ASIAN_mean) 23 .02066\n    #sum(sub_ASIAN_mean) = 25\n    #sum(sub_CEU_mean) = 23.21429\n    \n    AFR_mean = cbind(AFR_mean, sub_AFR_mean)\n    CEU_mean = cbind(CEU_mean, sub_CEU_mean)\n    ASIAN_mean = cbind(ASIAN_mean,sub_ASIAN_mean)\n    OTHER_mean = cbind(OTHER_mean, sub_OTHER_mean)\n}\n\n\n## the result say AFR_mean\n## each column is the statistics from one permutation, each row is the sampled distribution of randomness\n# Commented out the row names becase we care about the gene names\ncolnames(AFR_mean_short) = paste0(\"permute\",seq(1:1042))\nAFR_mean_short[1:10,1:10]\nrownames(AFR_mean_short) = row.names(INDELH_data_short)\ncolnames(CEU_mean_short) = paste0(\"permute\",seq(1:1042))\nCEU_mean_short[1:10,1:10]\nrownames(CEU_mean_short) = row.names(INDELH_data_short)\ncolnames(ASIAN_mean_short) = paste0(\"permute\",seq(1:1042))\nrownames(ASIAN_mean_short) = row.names(INDELH_data_short)\ncolnames(OTHER_mean_short) = paste0(\"permute\",seq(1:1042))\nrownames(OTHER_mean_short) = row.names(INDELH_data_short)\ndim(CEU_mean_short)\n\n### next we gonna compute the observation statistics we have\nob_AFR_mean_short = apply(INDELH_data_short[,1:70],1,mean)\nob_CEU_mean_short = apply(INDELH_data_short[,71:399],1,mean)\nob_ASIAN_mean_short = apply(INDELH_data_short[,400:412],1,mean)\nob_OTHER_mean_short = apply(INDELH_data_short[,413:654],1,mean)\n\n### so we can compute the p value now\np_AFR_enrichment = sapply(1:7221,function(x)sum(ob_AFR_mean_short[x]<AFR_mean_short[x,])/500)\np_CEU_enrichment = sapply(1:7221,function(x)sum(ob_CEU_mean_short[x]<CEU_mean_short[x,])/500)\np_ASIAN_enrichment = sapply(1:7221,function(x)sum(ob_ASIAN_mean_short[x]<ASIAN_mean_short[x,])/500)\np_OTHER_enrichment = sapply(1:7221,function(x)sum(ob_OTHER_mean_short[x]<OTHER_mean_short[x,])/500)\n\np_AFR_enrichment[1:20]\n# we will see if where the enrichment are, you can set your sinificant level, \n# here I will use 1 out of 500\n\nINDELH_AFR_enrich_short <- which(p_AFR_enrichment<1/500)\nlength(INDELH_AFR_enrich_short)\n#291 gnes of interest\nINDELH_CEU_enrich_short <-which(p_CEU_enrichment<1/500)\nINDELH_ASIAN_enrich_short <-which(p_ASIAN_enrichment<1/500)\nINDELH_OTHER_enrich_short <-which(p_OTHER_enrichment<1/500)\nINDELH_AFR_enrich_short_genes <- rownames(INDELH_data_short)[which(p_AFR_enrichment<1/500)]\nINDELH_CEU_enrich_short_genes <- rownames(INDELH_data_short)[which(p_CEU_enrichment<1/500)]\nINDELH_ASIAN_enrich_short_genes <- rownames(INDELH_data_short)[which(p_ASIAN_enrichment<1/500)]\nINDELH_OTHER_enrich_short_genes <- rownames(INDELH_data_short)[which(p_OTHER_enrichment<1/500)]\nsaveRDS(INDELH_AFR_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_AFR_enriched.Rds\")\nsaveRDS(INDELH_CEU_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_CEU_enriched.Rds\")\nsaveRDS(INDELH_ASIAN_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_ASIAN_enriched.Rds\")\nsaveRDS(INDELH_OTHER_enrich_short, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_OTHER_enriched.Rds\")\nrownames(INDELH_data_short)[129]\n########################################Save enrichment table#######################################################\n\nINDELH_sig_AFR <- INDELH_data_short[INDELH_AFR_enrich_short,]\nINDELH_sig_CEU <- INDELH_data_short[INDELH_CEU_enrich_short,]\nINDELH_sig_ASIAN <- INDELH_data_short[INDELH_ASIAN_enrich_short,]\nINDELH_sig_OTHER <- INDELH_data_short[INDELH_OTHER_enrich_short,]\n\napply(INDELH_sig_AFR,1,sum)\napply(INDELH_sig_CEU,1,sum)\nwhich(sapply(INDELH_sig_CEU,is.numeric)==FALSE)\n#INDELH_sig_AFR[,46] = sapply(INDELH_sig_AFR[,46], as.double)\n\ndim(INDELH_n_AFR)\n#6645 71(1st column gene names)\ndim(INDELH_sig_AFR)\n#433 654\n\n\n####################Making matrix with only gthat show up in at least 5 pts for each group##########################\nrnames_AFR = names(which(apply(INDELH_sig_AFR,1,function(x)sum(x)>5)))\nINDELH_AFR_etab = INDELH_data_short[rnames_AFR,1:70]\napply(INDELH_AFR_etab,1,sum)\nrnames_CEU = names(which(apply(INDELH_sig_CEU,1,function(x)sum(x)>5)))\nrnames_ASIAN = names(which(apply(INDELH_sig_ASIAN,1,function(x)sum(x)>5)))\nrnames_OTHER = names(which(apply(INDELH_sig_OTHER,1,function(x)sum(x)>5)))\n#rnames matrices give the genes from each ethnicity that are statistically significant and have at least 5 pateitnts with the mutation\n#unique sorted the rnmaes matrices to make sure that there were no dulicates also the names are different bu tht enumbers may be similareso the names are more importatnt\n\nINDELH_rnames = unique(sort(c(rnames_AFR,rnames_CEU,rnames_ASIAN,rnames_OTHER)))\nINDELH_enrich_table = INDELH_data_short[INDELH_rnames,]\nsum(INDELH_enrich_table[1,])\n#6  which is ABCA6 which was significant in CEU INDEL_high so it is also high\n#This table is organized by race 1-70 AFR,711-399CEU,400-412 ASIAN, 413-654\n#at least 5pts have the mutations that passed the permutation filter after passign the INDELH filter\n# THis is ordered by ethnicity with AFR followed by \nwrite.table(INDELH_enrich_table, file = \"/Volumes/home/greally-lab/T_Trial/INDEL_enrichment_table_p002_n5.txt\", sep = \"\\t\")\n\n#rownames(INDELH_sig_AFR) <- INDELH_sig_AFR$GENES\nINDELH_data_short[1:10,1:10]\n#INDELH_sig_AFR <- INDELH_sig_AFR[-1]\n#1805 (number of genes of interest for CEU)\nwrite.table(INDELH_sig_AFR, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_p002_AFR.txt\", sep = \"\\t\")\nwrite.table(INDELH_sig_CEU, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_p002_CEU.txt\", sep = \"\\t\")\nwrite.table(INDELH_sig_ASIAN, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_p002_ASIAN.txt\", sep = \"\\t\")\nwrite.table(INDELH_sig_OTHER, file = \"/Volumes/home/greally-lab/T_Trial/INDELH_p002_OTHER.txt\", sep = \"\\t\")\n\napply(INDELH_sig_CEU,1,sum)\n#which(sapply(INDELH_sig_CEU,is.numeric)==FALSE)\n\n# let's take a look at the index I set to be enriched in CEU again\nwhich(p_AFR_enrichment<1/500)\nwhich(p_OTHER_enrichment<1/500)\n\n\n##############################Double checking the values of the tables####################################\n\nINDELH_AFR = read.table(\"/Volumes/home/greally-lab/T_Trial/INDELH_p002_AFR.txt\")\nINDELH_CEU = read.table(\"/Volumes/home/greally-lab/T_Trial/INDELH_p002_CEU.txt\")\n \nrownames(INDELH_AFR) <- INDELH_AFR$GENES\nINDELH_AFR <- INDELH_AFR[-1]\nINDELH_AFR[1:10,1:10]\n\n\nrownames(INDELH_CEU) = INDELH_CEU$GENES\nINDELH_CEU = INDELH_CEU[-1]\nINDELH_CEU[1:10,1:10]\n\ndim(INDELH_n_AFR)\n#6645 71(1st column gene names)\ndim(INDELH_sig_AFR)\n#291 71\ndim(INDELH_CEU)\n#1805 329\n\n#################Making new table with the statistically significant values###################################################\nINDELH_CEU2plus = which(apply(INDELH_CEU,1,function(x)sum(x)>1))\nlength(INDELH_CEU2plus)\n#323\nINDELH_AFR2plus = which(apply(INDELH_AFR,1,function(x)sum(x)>1))\nlength(INDELH_AFR2plus)\n#9\n\n#which(sapply(INDELH_AFR,is.numeric)==FALSE)\n#INDELH_AFR[,46] = sapply(INDELH_AFR[,46], as.double)\n\napply(INDELH_CEU,1,sum)\n#Most of these genes are at 1, but some are 0 I will remove the 0s\n\nINDELH_AFR_CEU_2plus = rbind(INDELH_data_short[INDELH_AFR2plus,1:399],INDELH_data_short[INDELH_CEU2plus,1:400]) \ndim(INDELH_AFR_CEU_2plus)\n#332 rows! perfect\n#need to double check for duplicates\n```\n\n\nPlotting one of these graphs\n```{r ONCOPRINT}\nlibrary(ComplexHeatmap)\n#############################LOAD Tables##########################\nSNVH_sig_AFR_tab <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_AFR.txt\")\n#SNVL_sig_AFR_tab <- read.table(\"\")\n\nSNVH_sig_CEU_tab <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_CEU.txt\")\nSNVH_sig_ASIAN_tab <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_ASIAN.txt\")\nSNVH_sig_OTHER_tab <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_OTHER.txt\")\n##### New tables seperated by the filters with the groups organized ############################ \nSNVH_enrich_table <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_enrichment_table_p002_n3.txt\")\nINDELH_enrich_table <- read.table(\"/Volumes/home/greally-lab/T_Trial/INDEL_enrichment_table_p002_n5.txt\")\nINDELL_enrich_table <- read.table()\n\n########################## convert tables to matrices ############################\n\napply(SNVH_sig_AFR_tab,1, sum)\nSNVH_AFR_mat <- as.matrix(SNVH_sig_AFR_tab)\nrownames(SNVH_sig_AFR_tab) <- SNVH_sig_AFR_tab$GENES\nSNVH_sig_AFR_tab <- SNVH_sig_AFR_tab[-1]\n\n\n##########################New tables to use for the plots################################\n\n####################setting up how I the table background##############################\nalter_fun = list(\n   \"0\" = function(x, y, w, h) {\n        grid.rect(x, y, w-unit(0.5, \"mm\"), h-unit(0.5, \"mm\"), gp = gpar(fill = \"#CCCCCC\", col = NA))\n    },\n    #SNVLOW = function(x, y, w, h) {\n      #  grid.rect(x, y, w-unit(0.5, \"mm\"), h-unit(0.5, \"mm\"), gp = gpar(fill = \"blue\", col = NA))\n  #  },\n    \"1\" = function(x, y, w, h) {\n        grid.rect(x, y, w-unit(0.5, \"mm\"), h-unit(0.5, \"mm\"), gp = gpar(fill = \"red\", col = NA))\n    },\n    \"2\" = function(x, y, w, h) {\n        grid.rect(x, y, w-unit(0.5, \"mm\"), h*0.33, gp = gpar(fill = \"#008000\", col = NA))\n    }\n)\n#colors for bar plot\ncolor = c(\"1\" = \"red\", \"SNVLOW\" = \"blue\", \"2\" = \"#008000\")\n###########Mapping headt map of SNVH AFR and CEU ############################\nSNVH_AFR_matrix = as.matrix(SNVH_enrich_table[,1:69])\nrownames(SNVH_AFR_matrix) = rownames(SNVH_enrich_table)\nSNVH_CEU_matrix = as.matrix(SNVH_enrich_table[,70:399])\nrownames(SNVH_CEU_matrix) = rownames(SNVH_enrich_table)\nhm_snvhafr = Heatmap(SNVH_AFR_matrix, name = SNV_High_AFR, row_title = \"Genes\", cluster_rows = FALSE)\nSNVH_Mat_list = SNVH_AFR_matrix + SNVH_CEU_matrix\n\ndraw(SNVH_Mat_list, name = \"SNV_High_AFR\", row_title = \"Genes\", gap = units(0.1,\"cm\"), km = 2, cluster_rows = FALSE)\n#Looking to see if there are any mutations that are greater than 1 otherwise an oncoprint of mutation type may be more useful \n\nclass(SNVH_sig_CEU_tab)\nHeatmap(SNVH_AFR_mat, name = \"SNVH_African\",row_title = \"GENES\", column_title = \"Patients\", col = colorRamp2(c(0,1),c(\"white\",\"red\")))\n\nSNVH_sig_CEU_tab <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_CEU.txt\",stringsAsFactors = F, sep = \"\\t\")\nSNVH_sig_CEU_tab[1:5,]\nrownames(SNVH_sig_CEU_tab) <- SNVH_sig_CEU_tab$GENES\nSNVH_sig_CEU_tab <- SNVH_sig_CEU_tab[-1]\n\nSNVH_AFR_mat <- as.matrix(SNVH_sig_AFR_tab)\nSNVH_CEU_mat <- as.matrix(SNVH_sig_CEU_tab)\nSNVH_CEU_mat[1:5,1:20]\nSNVH_sig_CEU_tab[1:5,1:20]\n\n\nmat_list = list(SNVH_AFR_mat)\nmat_list_2 = unify_mat_list(mat_list)\n\noncoPrint(SNVH_AFR_mat, get_type = function(x) strsplit(x,\";\")[[1]],\n    alter_fun = alter_fun, col = col, \n    column_title = \"CRC SNV High \",\n    heatmap_legend_param = list(title = \"Marked race\", at = c(\"0\",\"1\",\"2\"), \n        labels = c(\"0\", \"1\",\"2\")))\n```\n\n\n\n```{r ONCOPRINT, echo = FALSE, SNVH Low pass}\nlibrary(ComplexHeatmap)\n#############################LOAD Tables##########################\nSNVL_sig_AFR_tab <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVL_p002_AFR.txt\")\nSNVH_sig_AFR_tab[1:5,1:20]\n#rownames(SNVH_sig_AFR_tab) <- SNVH_sig_AFR_tab$GENES\n#SNVH_sig_AFR_tab <- SNVH_sig_AFR_tab[-1]\n\n\nSNVH_sig_CEU_tab <- read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_CEU.txt\")\nSNVH_sig_CEU_tab[1:5,1:20]\nrownames(SNVH_sig_CEU_tab) <- SNVH_sig_CEU_tab$GENES\nSNVH_sig_CEU_tab <- SNVH_sig_CEU_tab[-1]\n\n\n```\n## Including Plots\n\nYou can also embed plots, for example:\n\n```{r oncoprint, echo=FALSE}\n#Make lists of all the files\nmat1 <- as.matrix(snvh_table_f)\nmat2 <- as.matrix(snvm_table_f)\nmat3 <- as.matrix(snvl_table_f)\nmat_list_snv <- list(mat1,mat2,mat3)\nmat_list_indel <- list(INDELHIGH_table_f,INDELLow_table_f,INDELMOD_table_f)\nmat_list <- list(snvh_table_f, INDELHIGH_table_f, snvl_table_f, INDELLow_table_f, snvm_table_f, INDELMOD_table_f)\nmatlist_high <- list(snvh_table_f, INDELHIGH_table_f)\nmatlist_low <- list(snvl_table_f, INDELLow_table_f)\nmatlist_mod <- list(snvm_table_f, INDELMOD_table_f)\nmat_list_snv$snvh_table_f\n# unify the matrices to make them all have the same demetions\nmat_list_snv_uniunify_mat_list(mat_list_snv)\n\n\n\noncoPrint(mat_list_snv,\n    alter_fun = list(\n        snv = function(x, y, w, h) grid.rect(x, y, w*0.9, h*0.9, gp = gpar(fill = col[\"snv\"], col = NA))\n        #indel = function(x, y, w, h) grid.rect(x, y, w*0.9, h*0.4, gp = gpar(fill = col[\"indel\"], col = NA))\n    ), col = col)\n```\n\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n",
    "created" : 1507139395061.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "112|25|259|0|\n526|12|730|0|\n732|19|961|0|\n963|21|1221|0|\n1223|6|1490|0|\n1572|45|1587|0|\n1592|28|1614|0|\n",
    "hash" : "4100646269",
    "id" : "811971AC",
    "lastKnownWriteTime" : 1509490875,
    "last_content_update" : 1509490875082,
    "path" : "~/Documents/Git/CRC_basics/Tables/Onco_plots.Rmd",
    "project_path" : "Onco_plots.Rmd",
    "properties" : {
        "docOutlineVisible" : "0",
        "last_setup_crc32" : "C38760DF5f0a361a",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}