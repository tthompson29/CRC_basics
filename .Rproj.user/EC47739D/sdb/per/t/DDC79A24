{
    "collab_server" : "",
    "contents" : "############################################Objective ancestry Tables################################################\n\n######################Reading in pertinant data######################\n### These tables have all of the genes not just the ones specific to the mutation I'm interested in I need the short talbes\nSNVH_fn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVHIGH_fn.Rds\")\ndim(SNVH_fn)\nSNVL_fn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVLOW_fn.Rds\")\nSNVM_fn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVMOD_fn.Rds\")\nINDELHIGH_tfn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_fn.Rds\")\nINDELLow_tfn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/INDELLOW_fn.Rds\")\nINDELMOD_tfn<- readRDS(\"/Volumes/home/greally-lab/T_Trial/INDELMOD_fn.Rds\")\n#####################Reading in mutation specific tables##############################\nSNVH_n<-readRDS(\"/Volumes/home/greally-lab/T_Trial/SNVHIGH_n.Rds\")\nINDELH_n<-readRDS(\"/Volumes/home/greally-lab/T_Trial/INDELHIGH_n.Rds\") # *_n tables are named and mutation specific\n\nMETA_data = read.table(\"/Volumes/home/greally-lab/T_Trial/TCGA_data_CRC/CRC_clinical.txt\")\nOB_AFR = read.table(\"/Volumes/home/greally-lab/T_Trial/OB_AFR_300\")\nsum(nrow(OB_AFR))# only 39 patients(these are the observed from the 300 patients)\nOB_EUR = read.table(\"/Volumes/home/greally-lab/T_Trial/OB_EUR_300\")\nsum(nrow(OB_EUR))#199 patients\nOB_EAS = read.table(\"/Volumes/home/greally-lab/T_Trial/OB_EAS_300\")\nOB_SAS_AMR = read.table(\"/Volumes/home/greally-lab/T_Trial/OB_SAS_AMR_300\")\nOB_ADMIX= read.table(\"/Volumes/home/greally-lab/T_Trial/OB_ADMIX_300\")\n######################################Making shorter tables#############################################\n\nsum(OB_EUR$pcolor ==\"UNK\") # 46 of the OB_EUR were unkown\nsum(OB_EUR$pcolor ==\"EUR\")#153 already self identified as CEU/EUR\nsum(OB_EUR$pcolor == \"HIS\")# 0 none\nMETA_data$bcr_patient_barcode = as.factor(META_data$bcr_patient_barcode)\nOB_EUR$bcr_patient_barcode = as.factor(OB_EUR$bcr_patient_barcode)\nOB_EUR_short= cbind(OB_EUR[1:4],OB_EUR[15],OB_EUR[16],OB_EUR[20])\nOB_AFR_short= cbind(OB_AFR[1:4],OB_AFR[15],OB_AFR[16],OB_AFR[20])\nOB_EAS_short = cbind(OB_EAS[1:4],OB_EAS[15],OB_EAS[16],OB_EAS[20])\nOB_SAS_AMR_short= cbind(OB_SAS_AMR[1:4],OB_SAS_AMR[15],OB_SAS_AMR[16],OB_SAS_AMR[20])\nOB_ADMIX_short= cbind(OB_ADMIX[1:4],OB_ADMIX[15],OB_ADMIX[16],OB_ADMIX[20])\nView(OB_AFR_short)\n\n#########Unecessary tables#######\nMETA_OB_CEU = merge(x = OB_EUR_short, y= META_data, by= \"bcr_patient_barcode\" ,all.x = T, all.y = F) \nMeta_OB_AFR = merge(x = OB_AFR_short, y= META_data, by = \"bcr_patient_barcode\" ,all.x = T, all.y = F) \nMeta_OB_EAS =merge(x = OB_EAS_short, y= META_data, by = \"bcr_patient_barcode\" ,all.x = T, all.y = F)\nMeta_OB_SAS_AMR =merge(x = OB_SAS_AMR_short, y= META_data, by = \"bcr_patient_barcode\" ,all.x = T, all.y = F)\nMeta_OB_ADMIX =merge(x = OB_ADMIX_short, y= META_data, by = \"bcr_patient_barcode\" ,all.x = T, all.y = F)\n\nOB_AFR_bcr_SUB = OB_AFR_short[,6:7]\n\n########################Making table for SNV table organized by patient ancestry#########################################\nSNVH_n_transposed = t(SNVH_n)\ndim(SNVH_n_transposed) #658 6645\nSNVH_n_transposed = as.data.frame(SNVH_n_transposed)\nSNVH_n_transposed[1:5,1:10]\nrow.names(SNVH_n_transposed)\nSNVH_n_transposed$patients = NA\nSNVH_n_transposed$patients = paste0(\"TCGA-\",row.names(SNVH_n_transposed))\nSNVH_n_transposed[1:5,6640:6646]\ndim(SNVH_n_transposed)\nSNVH_n_OB_AFR_300 = NULL\nSNVH_n_OB_AFR_300 = merge(x= OB_AFR_short[,6:7], y= SNVH_n_transposed, by.x = \"bcr_patient_barcode\", by.y = \"patients\", all.x = F, all.y = F)\ndim(SNVH_n_OB_AFR_300) #48 6647( one of the patients is missing from the gene tables but A6-6650 is dupicated several times)\ncolnames(SNVH_n_OB_AFR_300[3:6647]) = SNVH_n_transposed[1,1:6645]\nSNVH_n_OB_AFR_300 = SNVH_n_OB_AFR_300[!duplicated(SNVH_n_OB_AFR_300),]\ndim(SNVH_n_OB_AFR_300) #41 6647\nSNVH_n_OB_AFR_300[1:41,1:20]\n\nSNVH_n_OB_AFR_300[9,6643:6647]\nhead(SNVH_n)\nSNVH_n[1:5,1:5]\nwhich(SNVH_n_transposed$patients ==\"TCGA-A6-6650\")\n\n\nSNVH_n_OB_AFR_300 <-as.data.frame(SNVH_n[1])\nSNVH_n_OB_CEU_300 <- as.data.frame(SNVH_n[1])\nSNVH_n_OB_EAS_300 <- as.data.frame(SNVH_n[1])\nSNVH_n_OB_SAS_AMR_300 <- as.data.frame(SNVH_n[1])\nSNVH_n_OB_ADMIX_300 <- as.data.frame(SNVH_n[1])\n\noptions(stringsAsFactors = FALSE)\n\nclass(SNVH_n[,5])\n\nx<-16\n\nfor(x in 2:ncol(SNVH_n)){\n  if(match(paste0(\"TCGA-\",colnames(SNVH_n)[x]),OB_AFR_short$bcr_patient_barcode, nomatch = 0) > 0){\n    tempcol <- as.data.frame(SNVH_n[,x],stingsAsFactors = FALSE)\n    cname<- colnames(SNVH_n)[x]\n    colnames(tempcol) <- cname\n    SNVH_n_OB_AFR_300 <- cbind(SNVH_n_OB_AFR_300,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_n)[x]),OB_EUR_short$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVH_n[,x])\n    cname <- colnames(SNVH_n)[x]\n    colnames(tempcol) <- cname\n    SNVH_n_OB_CEU_300 <- cbind(SNVH_n_OB_CEU_300,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_n)[x]),OB_EAS_short$bcr_patient_barcode,nomatch = 0) >0){\n    tempcol <- as.data.frame(SNVH_n[,x])\n    cname<- colnames(SNVH_n)[x]\n    colnames(tempcol) <- cname\n    SNVH_n_OB_EAS_300 <- cbind(SNVH_n_OB_EAS_300,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_n)[x]),OB_ADMIX_short$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVH_n[,x])\n    cname <- colnames(SNVH_n)[x]\n    colnames(tempcol) <- cname\n    SNVH_n_OB_ADMIX_300 <- cbind(SNVH_n_OB_ADMIX_300,tempcol)\n  }\n  if(match(paste0(\"TCGA-\",colnames(SNVH_n)[x]),OB_SAS_AMR_short$bcr_patient_barcode,nomatch = 0) >0 ){\n    tempcol <- as.data.frame(SNVH_n[,x])\n    cname <- colnames(SNVH_n)[x]\n    colnames(tempcol) <- cname\n    SNVH_n_OB_SAS_AMR_300 <- cbind(SNVH_n_OB_SAS_AMR_300,tempcol)\n  }\n} \n\ndim(SNVH_n_OB_ADMIX_300) #6645 7\ndim(SNVH_n_OB_AFR_300) #6645 43\ndim(SNVH_n_OB_CEU_300) #6645 231\ndim(SNVH_n_OB_EAS_300) # 6645 8\ndim(SNVH_n_OB_SAS_AMR_300) #6645 43\nhead(SNVH_n_OB_AFR_300) # one additional is for the gene names in each of theese samples\nunique(row.names(t(SNVH_n_OB_SAS_AMR_300)))\nunique(row.names(t(SNVH_n_OB_ADMIX_300)))\nunique(OB_SAS_AMR_short$bcr_patient_barcode)\nunique(row.names(t(SNVH_n_OB_CEU_300)))\nunique(row.names(t(SNVH_n_OB_EAS_300)))\nunique(row.names(t(SNVH_n_OB_AFR_300)))\n################Removing duplicated rows#####################\nSNVH_n_OB_CEU_300_nd = SNVH_n_OB_CEU_300[,which(!duplicated(colnames(SNVH_n_OB_CEU_300)))] #6645 195(still 30 additional patients I know some have multiple runs)\nSNVH_n_OB_AFR_300_nd = SNVH_n_OB_AFR_300[,which((!duplicated(colnames(SNVH_n_OB_AFR_300))))] #6645 38\n\nSNVH_n_OB_ADMIX_300_nd = SNVH_n_OB_ADMIX_300[,which((!duplicated(colnames(SNVH_n_OB_ADMIX_300))))] #6645 7 removed any multiple\nSNVH_n_OB_EAS_300_nd = SNVH_n_OB_EAS_300[,which((!duplicated(colnames(SNVH_n_OB_EAS_300))))]# 6645 8 no duplicates\nSNVH_n_OB_SAS_AMR_300_nd = SNVH_n_OB_SAS_AMR_300[,which(!duplicated(colnames(SNVH_n_OB_SAS_AMR_300)))] #6645 43\nsum(ncol(SNVH_n_OB_ADMIX_300_nd),ncol(SNVH_n_OB_AFR_300_nd),ncol(SNVH_n_OB_CEU_300_nd),ncol(SNVH_n_OB_EAS_300_nd), ncol(SNVH_n_OB_SAS_AMR_300_nd)- 5)\n#286 columns when you remove all the duplicates. Some of the samples that are in the whole data set do not have  \n##############################Merge races in order######################################\nSNVH_OB_Ordered <- cbind(SNVH_n_OB_AFR_300_nd,SNVH_n_OB_CEU_300_nd[,2:195],SNVH_n_OB_EAS_300_nd[2:8],SNVH_n_OB_SAS_AMR_300_nd[,2:43], SNVH_n_OB_ADMIX_300_nd[,2:7])\nrownames(SNVH_OB_Ordered) <- SNVH_OB_Ordered$GENES\nSNVH_OB_Ordered[1:5,1:5]\nSNVH_OB_Ordered_short <-SNVH_OB_Ordered[-1]\nwrite.table(SNVH_OB_Ordered_short,\"/Volumes/home/greally-lab/T_Trial/SVNH_300_ordered.txt\",sep = \"\\t\")\ndim(SNVH_OB_Ordered_short)\n#6645 286 - missing 3 samples. Still not sure what happened = SNVH_n(16,359,624)\ncolnames(SNVH_n_OB_ADMIX_300_nd[2]) #A6-6652\ncolnames(SNVH_n_OB_AFR_300_nd[2])#A6-A565\ncolnames(SNVH_n_OB_CEU_300_nd[2])#G4-6627\ncolnames(SNVH_n_OB_EAS_300_nd[2])# CA-6717\ncolnames(SNVH_n_OB_SAS_AMR_300_nd[2])#AA-3531\n\nsaveRDS(SNVH_OB_Ordered_short, file =\"/Volumes/home/greally-lab/T_Trial/SVNH_ordered_300.Rds\")\n\n#################################################Permuation############################################################\n\nAFR_mean_OB_300_SNVH = NULL\nCEU_mean_OB_300_SNVH = NULL\nSAS_AMR_mean_OB_300_SNVH = NULL\nEAS_mean_OB_300_SNVH = NULL\nADMIX_mean_OB_300_SNVH = NULL\n\n\n#read in the data each time\n#SNVH_OB_Ordered_short <- read.table(\"/Volumes/home/greally-lab/T_Trial/SVNH_ordered.txt\")\ndim(SNVH_OB_Ordered_short) #6645 286\nSNVH_OB_Ordered_short[1:5,1:5]\n#row.names(SNVH_OB_Ordered_short) <- SNVH_OB_Ordered_short$GENES\n#SNVH_OB_Ordered_short <-SNVH_OB_Ordered_short[-1]\n\nclass(SNVH_OB_Ordered_short[1,1])\nwhich(class(SNVH_OB_Ordered_short)!= \"numeric\")\nsum(SNVH_OB_Ordered_short[,2])\n#apply(SNVH_OB_Ordered_short,2,as.numeric(SNVH_OB_Ordered_short))\n#SNVH_OB_Ordered_short[,2] <- as.numeric(levels(SNVH_OB_Ordered_short[,2]))[SNVH_OB_Ordered_short[,2]]\n\noptions(stringsAsFactors = F)\nset.seed(1)\nfor (i in 1:1000){\n  if(i%%100==0) print(i)\n  #remember to skip the first column it is genes\n  tmp_data = t(apply(SNVH_OB_Ordered_short,1,function(x){as.numeric(sample(x))}))\n  tmp_data = as.data.frame(tmp_data)\n  #class(tmp_data[,1])\n  \n  # here instead of collect the permuated data everytime,\n  # we will only collect statistical values to save memory\n  # we will collect median/mean of number of SNVs in that gene\n  # in each population (or other values you are interested in) \n  \n  sub_AFR_mean_OB_300_SNVH = apply(tmp_data[,1:37],1,mean)\n  sub_CEU_mean_OB_300_SNVH = apply(tmp_data[,38:231],1,mean)\n  sub_EAS_mean_OB_300_SNVH = apply(tmp_data[,232:238],1,mean)\n  sub_SAS_AMR_mean_OB_300_SNVH = apply(tmp_data[,239:280],1,mean)\n  sub_ADMIX_mean_OB_300_SNVH = apply(tmp_data[,281:286],1,mean)\n  ###Testing to see some sample sums\n  #sum(sub_ASIAN_mean) 23 .02066\n  #sum(sub_ASIAN_mean) = 25\n  #sum(sub_CEU_mean) = 23.21429\n  \n  AFR_mean_OB_300_SNVH = cbind(AFR_mean_OB_300_SNVH, sub_AFR_mean_OB_300_SNVH)\n  CEU_mean_OB_300_SNVH = cbind(CEU_mean_OB_300_SNVH, sub_CEU_mean_OB_300_SNVH)\n  EAS_mean_OB_300_SNVH = cbind(EAS_mean_OB_300_SNVH,sub_EAS_mean_OB_300_SNVH)\n  ADMIX_mean_OB_300_SNVH = cbind(ADMIX_mean_OB_300_SNVH, sub_ADMIX_mean_OB_300_SNVH)\n  SAS_AMR_mean_OB_300_SNVH = cbind(SAS_AMR_mean_OB_300_SNVH, sub_SAS_AMR_mean_OB_300_SNVH)\n}\n\n\n## the result say AFR_mean\n## each column is the statistics from one permutation, each row is the sampled distribution of randomness\n# Commented out the row names becase we care about the gene names\nAFR_mean_OB_300_SNVH= as.data.frame(AFR_mean_OB_300_SNVH)\nCEU_mean_OB_300_SNVH= as.data.frame(CEU_mean_OB_300_SNVH)\nEAS_mean_OB_300_SNVH= as.data.frame(EAS_mean_OB_300_SNVH)\nSAS_AMR_mean_OB_300_SNVH= as.data.frame(SAS_AMR_mean_OB_300_SNVH)\nADMIX_mean_OB_300_SNVH= as.data.frame(ADMIX_mean_OB_300_SNVH)\n\ncolnames(AFR_mean_OB_300_SNVH) = paste0(\"permute\",seq(1:1000))\nAFR_mean_OB_300_SNVH[1:10,1:10]\nrownames(AFR_mean_OB_300_SNVH) = row.names(SNVH_OB_Ordered_short)\ncolnames(CEU_mean_OB_300_SNVH) = paste0(\"permute\",seq(1:1000))\nCEU_mean_OB_300_SNVH[1:10,1:10]\nrownames(CEU_mean_OB_300_SNVH) = row.names(SNVH_OB_Ordered_short)\ncolnames(EAS_mean_OB_300_SNVH) = paste0(\"permute\",seq(1:1000))\nrownames(EAS_mean_OB_300_SNVH) = row.names(SNVH_OB_Ordered_short)\ncolnames(SAS_AMR_mean_OB_300_SNVH) = paste0(\"permute\",seq(1:1000))\nrownames(SAS_AMR_mean_OB_300_SNVH) = row.names(SNVH_OB_Ordered_short)\ncolnames(ADMIX_mean_OB_300_SNVH) = paste0(\"permute\",seq(1:1000))\nrownames(ADMIX_mean_OB_300_SNVH) = row.names(SNVH_OB_Ordered_short)\nhead(ADMIX_mean_OB_300_SNVH)\nclass(AFR_mean_OB_300_SNVH[1,])\n\nSNVH_OB_Ordered_short= as.data.frame(SNVH_OB_Ordered_short)\nclass(SNVH_OB_Ordered_short[3,])\n### next we gonna compute the observation statistics we have\nob_AFR_mean_OB_300_SNVH = apply(SNVH_OB_Ordered_short[,1:37],1,function(x){mean(as.numeric(x))})\nob_CEU_mean_OB_300_SNVH = apply(SNVH_OB_Ordered_short[,38:231],1,function(x){mean(as.numeric(x))})\nob_EAS_mean_OB_300_SNVH = apply(SNVH_OB_Ordered_short[,232:238],1,function(x){mean(as.numeric(x))})\nob_SAS_AMR_mean_OB_300_SNVH = apply(SNVH_OB_Ordered_short[,239:280],1,function(x){mean(as.numeric(x))})\nob_ADMIX_mean_OB_300_SNVH = apply(SNVH_OB_Ordered_short[,281:286],1,function(x){mean(as.numeric(x))})\n\n### so we can compute the p value now\np_AFR_300_enrichment = sapply(1:6645,function(x)sum(ob_AFR_mean_OB_300_SNVH[x]<AFR_mean_OB_300_SNVH[x,])/500)\np_CEU_300_enrichment = sapply(1:6645,function(x)sum(ob_CEU_mean_OB_300_SNVH[x]<CEU_mean_OB_300_SNVH[x,])/500)\np_EAS_300_enrichment = sapply(1:6645,function(x)sum(ob_EAS_mean_OB_300_SNVH[x]<EAS_mean_OB_300_SNVH[x,])/500)\np_SAS_AMR_300_enrichment = sapply(1:6645,function(x)sum(ob_SAS_AMR_mean_OB_300_SNVH[x]<SAS_AMR_mean_OB_300_SNVH[x,])/500)\np_ADMIX_300_enrichment = sapply(1:6645,function(x)sum(ob_ADMIX_mean_OB_300_SNVH[x]<ADMIX_mean_OB_300_SNVH[x,])/500)\np_AFR_300_enrichment[1:20]\n# we will see if where the enrichment are, you can set your sinificant level, \n# here I will use 1 out of 500\n\n\n#seperate actual enrichment from simply zero, moved the p value up to p of 0.02 for most of the samples except the CEU which for some reason hadno signigifant values. I think this is because it is the majority of the table.\nSNVH_AFR_enrich_300 <- which(p_AFR_300_enrichment< 10/500 & p_AFR_300_enrichment > 0/1)\nlength(SNVH_AFR_enrich_300)\n#291 gnes of interest\nSNVH_CEU_enrich_300 <-which(p_CEU_300_enrichment<100/500 & p_CEU_300_enrichment > 0/1) \nSNVH_EAS_enrich_300 <-which(p_EAS_300_enrichment<10/500 & p_EAS_300_enrichment > 0/1)\nSNVH_SAS_AMR_enrich_300 <-which(p_SAS_AMR_300_enrichment<50/500 & p_SAS_AMR_300_enrichment >0/1)\nSNVH_ADMIX_enrich_300 <-which(p_ADMIX_300_enrichment<10/500 & p_ADMIX_300_enrichment >0/1)\n#SNVH_AFR_enrich_short_genes <- rownames(SNVH_OB_Ordered_short)[which(p_AFR_enrichment<1/500)]\n#SNVH_CEU_enrich_short_genes <- rownames(SNVH_OB_Ordered_short)[which(p_CEU_enrichment<1/500)]\n#SNVH_ASIAN_enrich_short_genes <- rownames(SNVH_OB_Ordered_short)[which(p_ASIAN_enrichment<1/500)]\n#SNVH_OTHER_enrich_short_genes <- rownames(SNVH_OB_Ordered_short)[which(p_OTHER_enrichment<1/500)]\n\n##############  Save enrichment table####################\nsaveRDS(SNVH_AFR_enrich_300, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_AFR_300_enriched.Rds\")\nsaveRDS(SNVH_CEU_enrich_300, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_CEU_300_enriched.Rds\")\nsaveRDS(SNVH_EAS_enrich_300, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_EAS_300_enriched.Rds\")\nsaveRDS(SNVH_SAS_AMR_enrich_300, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_SAS_AMR_300_enriched.Rds\")\nsaveRDS(SNVH_ADMIX_enrich_300, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_ADMIX_300_enriched.Rds\")\nrownames(SNVH_OB_Ordered_short)[129]\n\n######       SNVH_ethnicity_enrich_short is the row number of significance for that particlar ethnicity##########\n####################### Making significant tables for each group ######################\nSNVH_300_sig_AFR <- as.matrix.data.frame(SNVH_OB_Ordered_short[SNVH_AFR_enrich_300,])\nSNVH_300_sig_CEU <- as.matrix.data.frame(SNVH_OB_Ordered_short[SNVH_CEU_enrich_300,])\nSNVH_300_sig_EAS <- as.matrix.data.frame(SNVH_OB_Ordered_short[SNVH_EAS_enrich_300,])\nSNVH_300_sig_SAS_AMR <- as.matrix.data.frame(SNVH_OB_Ordered_short[SNVH_SAS_AMR_enrich_300,])\nSNVH_300_sig_ADMIX <- as.matrix.data.frame(SNVH_OB_Ordered_short[SNVH_ADMIX_enrich_300,])\nhead(SNVH_300_sig_AFR)\n\nSNVH_300_sig_AFR[1:9,1:5]\nheatmap(SNVH_300_sig_AFR)\n\n\nclass(SNVH_300_sig_AFR[,1])\n\napply(SNVH_300_sig_AFR,1,sum)\nwhich(sapply(SNVH_300_sig_AFR,is.numeric)==FALSE)\n\n#1805 (number of genes of interest for CEU)\nwrite.table(SNVH_300_sig_AFR, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_300_sig_table_AFR.txt\", sep = \"\\t\")\nwrite.table(SNVH_300_sig_CEU, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_300_sig_table_CEU.txt\", sep = \"\\t\")\nwrite.table(SNVH_300_sig_EAS, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_300_sig_table_EAS.txt\", sep = \"\\t\")\nwrite.table(SNVH_300_sig_SAS_AMR, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_300_sig_table_SAS_AMR.txt\", sep = \"\\t\")\nwrite.table(SNVH_300_sig_ADMIX, file = \"/Volumes/Macintosh HD/Users/TVictoria/Documents/Git/CRC_basics/Tables/SNVH_300_sig_table_ADMIX.txt\", sep = \"\\t\")\n\napply(SNVH_sig_CEU,1,sum)\nwhich(sapply(SNVH_sig_CEU,is.numeric)==FALSE)\n\n# let's take a look at the index I set to be enriched in CEU again\nwhich(p_AFR_enrichment<1/500)\nwhich(p_OTHER_enrichment<1/500)\n\n\n##############################Double checking the values of the tables####################################\n############### Variables for table\nSNVH_AFR = read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_AFR.txt\")\nSNVH_CEU = read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_CEU.txt\")\nSNVH_ASIAN = read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_ASIAN.txt\")\nSNVH_OTHER = read.table(\"/Volumes/home/greally-lab/T_Trial/SNVH_p002_OTHER.txt\")\n\nrownames(SNVH_OTHER) <- SNVH_OTHER$GENES\n\nSNVH_OTHER <- SNVH_OTHER[-1]\nSNVH_OTHER[1:10,1:10]\n\n\nrownames(SNVH_CEU) = SNVH_CEU$GENES\nSNVH_CEU = SNVH_CEU[-1]\nSNVH_CEU[1:10,1:10]\n\ndim(SNVH_n_AFR)\n#6645 71(1st column gene names)\ndim(SNVH_sig_AFR)\n#291 71\ndim(SNVH_CEU)\n#1805 329\n\n## Check that at least 2 people have the gene\nSNVH_CEU2plus = which(apply(SNVH_CEU,1,function(x)sum(x)>1))\n#########################Making plots###################################################\n##black 1- 37 white 38 to 231\nlibrary(ComplexHeatmap)\nW_B_300_AFR_HM = as.data.frame(rbind(SNVH_300_sig_AFR[,1:231],SNVH_300_sig_CEU[,1:231]))\nW_B_300_AFR = as.data.frame(rbind(SNVH_300_sig_AFR[,1:231],SNVH_300_sig_CEU[,1:231]))\nW_300_AFR = as.data.frame(W_B_300_AFR[,38:231])\nB_300_AFR = as.data.frame(W_B_300_AFR[,1:37])\nSNVH_Mat_list =list(SNVH_300_sig_AFR[,1:231], SNVH_300_sig_CEU[,1:231])\ncolor = c( 0 = \"blue\", \"1\" = \"red\", \"2\" = \"#008000\")\nalter_fun = list(\n  \"0\" = function(x, y, w, h) {\n    grid.rect(x, y, w-unit(0.5, \"mm\"), h-unit(0.5, \"mm\"), gp = gpar(fill = \"#CCCCCC\", col = NA))\n  },\n  #SNVLOW = function(x, y, w, h) {\n  #  grid.rect(x, y, w-unit(0.5, \"mm\"), h-unit(0.5, \"mm\"), gp = gpar(fill = \"blue\", col = NA))\n  #  },\n  \"1\" = function(x, y, w, h) {\n    grid.rect(x, y, w-unit(0.5, \"mm\"), h-unit(0.5, \"mm\"), gp = gpar(fill = \"red\", col = NA))\n  },\n  \"2\" = function(x, y, w, h) {\n    grid.rect(x, y, w-unit(0.5, \"mm\"), h*0.33, gp = gpar(fill = \"#008000\", col = NA))\n  }\n)\n\n####### Changing the 0 an 1 to zero and one#######\nx = 1\n\nfor(x in 1:nrow(W_B_300_AFR)){\n  y = W_B_300_AFR[x,]\n       W_B_300_AFR[x,] = replace(W_B_300_AFR[x,], list = which(W_B_300_AFR[x,] == 0), values = \"\")\n       W_B_300_AFR[x,] = replace(W_B_300_AFR[x,], list = which(W_B_300_AFR[x,] == 1), values = \"SNV_HIGH;\")\n}\n\n\n#col_2 = c(\"NO_MUT\" = \"azure3\", \"SNV_HIGH\" = \"orangered3\")\ncol_2 = c( \"SNV_HIGH\" = \"orangered3\")\nalter_fun_2 = list(\n  background = function(x,y,w,h){ \n    grid.rect(x, y, w-unit(0.5,\"mm\"), h-unit(0.5, \"mm\"), gp = gpar(fill =\"#CCCCCC\"), col = NA)\n  },\n  SNV_HIGH = function(x,y,w,h){\n    grid.rect(x, y, w-unit(0.5,\"mm\"), h-unit(0.5, \"mm\"), gp = gpar(fill =\"orangered3\", col = NA))\n  }\n)\n \nB_300_AFR = as.matrix(B_300_AFR)\nW_300_AFR = as.matrix(W_300_AFR)\nmat_list = list(B_300_AFR,W_300_AFR) \nrownames(W_B_300_AFR)=cat(rownames(SNVH_300_sig_AFR), rownames(SNVH_300_sig_CEU))\nrownames(W_B_300_AFR) = rbind(rownames(SNVH_300_sig_AFR), rownames(SNVH_300_sig_CEU))\nAFR_300 = oncoPrint(W_B_300_AFR, get_type = function(x) strsplit(x,\";\")[[1]],\n          alter_fun = alter_fun_2, \n          col= col_2,\n          #remove_empty_columns = T,\n          column_title = \"CRC SNV High Impact Mutations\",\n          heatmap_legend_param = list(title = \"Mutations\", at = c(\"SNV_HIGH\"), \n                                      labels = c(\"SNV\")))\n\ndraw(AFR_300, heatmap_legend_side = \"bottom\")\nhead(W_B_300_AFR)\nHeatmap(W_B_300_AFR_HM)\ncolnames(W_B_300_AFR) = colnames(W_B_300_AFR_HM)\nSNVH_AFR_300_\n",
    "created" : 1512159106682.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2186009259",
    "id" : "DDC79A24",
    "lastKnownWriteTime" : 1513002909,
    "last_content_update" : 1513002910354,
    "path" : "~/Documents/Git/CRC_basics/Tables/Objective_Ancestry_tables.R",
    "project_path" : "Objective_Ancestry_tables.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}